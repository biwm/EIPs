(window.webpackJsonp=window.webpackJsonp||[]).push([[575],{990:function(e,t,r){"use strict";r.r(t);var a=r(46),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"abstract"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/ethereum/evmc",target:"_blank",rel:"noopener noreferrer"}},[e._v("EVMC"),r("OutboundLink")],1),e._v(" specifies a generic API for Ethereum execution engines. This EIP specifies a way of providing implementations of Ethereum precompiled contracts using the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/vmguide.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("EVMC VM API"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"specification"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),r("p",[e._v("For the complete "),r("a",{attrs:{href:"https://github.com/ethereum/evmc",target:"_blank",rel:"noopener noreferrer"}},[e._v("EVMC"),r("OutboundLink")],1),e._v(" specification visit the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("EVMC documentation"),r("OutboundLink")],1),e._v(" first. This EIP is based on and is compatible with EVMC ABI version 6.")]),e._v(" "),r("p",[e._v("The EVMC module with implementations of precompiled contracts SHOULD:")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("Advertise the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#gga44f9ecb88cf6422a0072936494fd6ac7a43ea2aa7b099a2d67bc53c118ff3683d",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("EVMC_CAPABILITY_PRECOMPILES")]),r("OutboundLink")],1),e._v(" capability in the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__instance.html#ae63b9ca898aa41cbd1e2fe86ca8f4e1c",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("get_capabilities()")]),r("OutboundLink")],1),e._v(" method.")])]),e._v(" "),r("li",[r("p",[e._v("Implement the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__instance.html#a0823ebff21f9b0395b157e8c6b14a207",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("execute()")]),r("OutboundLink")],1),e._v(" method in the following way:")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("Validate the incoming execution request requirements:")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("The message kind ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__message.html#a691cb93e81d6dfd4fd7e2fa3d06a6bfa",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_message::kind")]),r("OutboundLink")],1),e._v(") is a call ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#ggab2fa68a92a6828064a61e46060abc634abcf3ae29d9a88ff70b98374fc665694a",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("EVMC_CALL")]),r("OutboundLink")],1),e._v(").")])]),e._v(" "),r("li",[r("p",[e._v("The call destination address ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__message.html#a88ecfaa03a85a31c6da36fa043b98cea",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_message::destination")]),r("OutboundLink")],1),e._v(") is within the range of precompiled contracts defined by "),r("RouterLink",{attrs:{to:"/zh/eip-1352.html"}},[e._v("EIP-1352")]),e._v(".")],1)]),e._v(" "),r("li",[r("p",[e._v("There is no code provided (the "),r("code",[e._v("code")]),e._v(" argument is "),r("code",[e._v("NULL")]),e._v(" and "),r("code",[e._v("code_size")]),e._v(" argument is "),r("code",[e._v("0")]),e._v(").")])])]),e._v(" "),r("p",[e._v("If the requirements are not fulfilled, abort execution with the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#gga4c0be97f333c050ff45321fcaa34d920a2f3e0d8777f8d974ead27ae2a6eb2005",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("EVMC_REJECTED")]),r("OutboundLink")],1),e._v(" status code.")])]),e._v(" "),r("li",[r("p",[e._v("Check if the call destination address ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__message.html#a88ecfaa03a85a31c6da36fa043b98cea",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_message::destination")]),r("OutboundLink")],1),e._v(") targets existing precompiled contract. Consider the EVM revision ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#gae5759b1590071966ccf6a505b52a0ef7",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_revision")]),r("OutboundLink")],1),e._v(") requested by the "),r("code",[e._v("rev")]),e._v(" parameter of "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__instance.html#a0823ebff21f9b0395b157e8c6b14a207",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("execute()")]),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("If yes, execute as follows:")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("Inspect the input data ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__message.html#a1adee3454b105eb29cd659ee0cf65c77",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_message::input_data")]),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__message.html#a2cf1deebd0dbbb20f25ecdfa299f4b5d",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_message::input_size")]),r("OutboundLink")],1),e._v(") and calculate the "),r("em",[e._v("gas cost")]),e._v(" of the execution.")])]),e._v(" "),r("li",[r("p",[e._v("Compute the amount of "),r("em",[e._v("gas left")]),e._v(" after execution by subtracting the "),r("em",[e._v("gas cost")]),e._v(" from the call gas limit ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__message.html#ae8deff46588584fa27890e74c82db5e7",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_message::gas")]),r("OutboundLink")],1),e._v(").")])]),e._v(" "),r("li",[r("p",[e._v("If "),r("em",[e._v("gas left")]),e._v(" is negative, abort execution with the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#gga4c0be97f333c050ff45321fcaa34d920abfc47f75656c996c0b29c0553c00fc18",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("EVMC_OUT_OF_GAS")]),r("OutboundLink")],1),e._v(" status code.")])]),e._v(" "),r("li",[r("p",[e._v("Otherwise, execute the code of the precompiled contract, return the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#gga4c0be97f333c050ff45321fcaa34d920a4bc3069fec2bab2a55355a72b7db68b7",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("EVMC_SUCCESS")]),r("OutboundLink")],1),e._v(" status code, the output and "),r("em",[e._v("gas left")]),e._v(" ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__result.html#a61978e85f9d795a7b9695b9cbf1748d6",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_result::output_data")]),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__result.html#a93bb7419aff492cdef754421c6d74e26",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_result::output_size")]),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__result.html#af8478c93dbcc3cb2876037c5a5afd4c0",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_result::gas_left")]),r("OutboundLink")],1),e._v(").")])])])]),e._v(" "),r("li",[r("p",[e._v("Otherwise, emulate execution of empty code by returning the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#gga4c0be97f333c050ff45321fcaa34d920a4bc3069fec2bab2a55355a72b7db68b7",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("EVMC_SUCCESS")]),r("OutboundLink")],1),e._v(" status code and "),r("em",[e._v("gas left")]),e._v(" equal the call gas limit ("),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__message.html#ae8deff46588584fa27890e74c82db5e7",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("evmc_message::gas")]),r("OutboundLink")],1),e._v(").")])])])])]),e._v(" "),r("p",[e._v("Precompiled contract implementations are allowed to return two more EVMC error codes:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#gga4c0be97f333c050ff45321fcaa34d920aed5b2a4afa5a47af732569445920a4a9",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("EVMC_FAILURE")]),r("OutboundLink")],1),e._v(" if the failure was caused due to something other than out of gas (e.g. input validation error)")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://ethereum.github.io/evmc/group__EVMC.html#gga4c0be97f333c050ff45321fcaa34d920aed708e84d49cc1270e54ec20b0ca0a05",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("EVMC_REVERT")]),r("OutboundLink")],1),e._v(" if the precompile doesn't want to forfeit all supplied gas (as of May 2019 no such precompile exists)")])]),e._v(" "),r("p",[e._v("The Client is not required to provide the Host interface (["),r("code",[e._v("evmc_context")]),e._v("] argument of "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/structevmc__instance.html#a0823ebff21f9b0395b157e8c6b14a207",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("execute()")]),r("OutboundLink")],1),e._v(" is set to NULL). Therefore, the precompiled contracts implementation MUST NOT access the "),r("code",[e._v("evmc_context")]),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"rationale"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[e._v("#")]),e._v(" Rationale")]),e._v(" "),r("p",[e._v("It is very unlikely that any precompile will need to access or modify a contract state. Not requiring the Client to implement the EVMC Host interface removes the big portion of work needed for full EVMC integration.")]),e._v(" "),r("h2",{attrs:{id:"test-cases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#test-cases"}},[e._v("#")]),e._v(" Test Cases")]),e._v(" "),r("p",[e._v("EVMC provides the "),r("a",{attrs:{href:"https://ethereum.github.io/evmc/vmtester.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("evmc-vmtester"),r("OutboundLink")],1),e._v(" tool for checking compatibility with the EVMC specification.")]),e._v(" "),r("h2",{attrs:{id:"implementations"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#implementations"}},[e._v("#")]),e._v(" Implementations")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/ethereum/evmc/blob/master/examples/example_precompiles_vm/example_precompiles_vm.cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Example of Precompiles VM implementation"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/ewasm/ewasm-precompiles",target:"_blank",rel:"noopener noreferrer"}},[e._v("ewasm precompiles"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("Aleth code for precompiles")]),e._v(" "),r("li",[e._v("Parity code for precompiles")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/axic/eip1962-evmc",target:"_blank",rel:"noopener noreferrer"}},[e._v("EIP-1962 implemented as an EVMC precompile module"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"references"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/ethereum/evmc",target:"_blank",rel:"noopener noreferrer"}},[e._v("EVMC – Ethereum Client-VM Connector API"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://ethereum.github.io/evmc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("EVMC documentation"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://ethereum.github.io/evmc/vmguide.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("EVMC VM Implementation Guide"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/zh/eip-1352.html"}},[e._v("EIP 1352: Specify restricted address range for precompiles/system contracts")])],1)]),e._v(" "),r("h2",{attrs:{id:"copyright"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),r("p",[e._v("Copyright and related rights waived via "),r("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CC0"),r("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=o.exports}}]);