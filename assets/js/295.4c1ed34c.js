(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{695:function(t,e,a){"use strict";a.r(e);var s=a(46),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"simple-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[t._v("#")]),t._v(" Simple Summary")]),t._v(" "),a("p",[t._v("A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.")]),t._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),a("p",[t._v("This standard allows contracts, such as NFTs that support "),a("RouterLink",{attrs:{to:"/eip-721.html"}},[t._v("ERC-721")]),t._v(" and "),a("RouterLink",{attrs:{to:"/eip-1155.html"}},[t._v("ERC-1155")]),t._v(" interfaces, to signal a royalty amount to be paid to the NFT creator or rights holder every time the NFT is sold or re-sold. This is intended for NFT marketplaces that want to support the ongoing funding of artists and other NFT creators. The royalty payment must be voluntary, as transfer mechanisms such as "),a("code",[t._v("transferFrom()")]),t._v(" include NFT transfers between wallets, and executing them does not always imply a sale occurred. Marketplaces and individuals implement this standard by retrieving the royalty payment information with "),a("code",[t._v("royaltyInfo()")]),t._v(", which specifies how much to pay to which address for a given sale price. The exact mechanism for paying and notifying the recipient will be defined in future EIPs. This ERC should be considered a minimal, gas-efficient building block for further innovation in NFT royalty payments.")],1),t._v(" "),a("h2",{attrs:{id:"motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[t._v("#")]),t._v(" Motivation")]),t._v(" "),a("p",[t._v("There are many marketplaces for NFTs with multiple unique royalty payment implementations that are not easily compatible or usable by other marketplaces. Just like the early days of ERC-20 tokens, NFT marketplace smart contracts are varied by ecosystem and not standardized. This EIP enables all marketplaces to retrieve royalty payment information for a given NFT. This enables accurate royalty payments regardless of which marketplace the NFT is sold or re-sold at.")]),t._v(" "),a("p",[t._v("Many of the largest NFT marketplaces have implemented bespoke royalty payment solutions that are incompatible with other marketplaces. This standard implements standardized royalty information retrieval that can be accepted across any type of NFT marketplace. This minimalist proposal only provides a mechanism to fetch the royalty amount and recipient. The actual funds transfer is something which the marketplace should execute.")]),t._v(" "),a("p",[t._v("This standard allows NFTs that support "),a("RouterLink",{attrs:{to:"/eip-721.html"}},[t._v("ERC-721")]),t._v(" and "),a("RouterLink",{attrs:{to:"/eip-1155.html"}},[t._v("ERC-1155")]),t._v(" interfaces, to have a standardized way of signalling royalty information. More specifically, these contracts can now calculate a royalty amount to provide to the rightful recipient.")],1),t._v(" "),a("p",[t._v("Royalty amounts are always a percentage of the sale price. If a marketplace chooses "),a("em",[t._v("not")]),t._v(" to implement this EIP, then no funds will be paid for secondary sales. It is believed that the NFT marketplace ecosystem will voluntarily implement this royalty payment standard; in a bid to provide ongoing funding for artists/creators. NFT buyers will assess the royalty payment as a factor when making NFT purchasing decisions.")]),t._v(" "),a("p",[t._v("Without an agreed royalty payment standard, the NFT ecosystem will lack an effective means to collect royalties across all marketplaces and artists and other creators will not receive ongoing funding. This will hamper the growth and adoption of NFTs and demotivate NFT creators from minting new and innovative tokens.")]),t._v(" "),a("p",[t._v("Enabling all NFT marketplaces to unify on a single royalty payment standard will benefit the entire NFT ecosystem.")]),t._v(" "),a("p",[t._v("While this standard focuses on NFTs and compatibility with the ERC-721 and ERC-1155 standards, EIP-2981 does not require compatibility with ERC-721 and ERC-1155 standards. Any other contract could integrate with EIP-2981 to return royalty payment information. ERC-2981 is, therefore, a universal royalty standard for many asset types.")]),t._v(" "),a("p",[t._v("At a glance, here's an example conversation summarizing NFT royalty payments today:")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("Artist")]),t._v(': "Do you support royalty payments on your platform?"'),a("br"),t._v(" "),a("strong",[t._v("Marketplace")]),t._v(': "Yes we have royalty payments, but if your NFT is sold on another marketplace then we cannot enforce this payment."'),a("br"),t._v(" "),a("strong",[t._v("Artist")]),t._v(': "What about other marketplaces that support royalties, don\'t you share my royalty information to make this work?"'),a("br"),t._v(" "),a("strong",[t._v("Marketplace")]),t._v(': "No, we do not share royalty information."')])]),t._v(" "),a("h2",{attrs:{id:"specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[t._v("#")]),t._v(" Specification")]),t._v(" "),a("p",[t._v('The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL\nNOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and\n"OPTIONAL" in this document are to be interpreted as described in\nRFC 2119.')]),t._v(" "),a("p",[a("strong",[t._v("ERC-721 and ERC-1155 compliant contracts MAY implement this ERC for royalties to provide a standard method of specifying royalty payment information.")])]),t._v(" "),a("p",[t._v("Marketplaces that support this standard "),a("strong",[t._v("SHOULD")]),t._v(" implement some method of transferring royalties to the royalty recipient. Standards for the actual transfer and notification of funds will be specified in future EIPs.")]),t._v(" "),a("p",[t._v("Marketplaces "),a("strong",[t._v("MUST")]),t._v(" pay the royalty in the same unit of exchange as that of the "),a("code",[t._v("_salePrice")]),t._v(" passed to "),a("code",[t._v("royaltyInfo()")]),t._v(". This is equivalent to saying that the "),a("code",[t._v("_salePrice")]),t._v(" parameter and the "),a("code",[t._v("royaltyAmount")]),t._v(" return value "),a("strong",[t._v("MUST")]),t._v(" be denominated in the same monetary unit. For example, if the sale price is in ETH, then the royalty payment must also be paid in ETH, and if the sale price is in USDC, then the royalty payment must also be paid in USDC.")]),t._v(" "),a("p",[t._v("Implementers of this standard "),a("strong",[t._v("MUST")]),t._v(" calculate a percentage of the "),a("code",[t._v("_salePrice")]),t._v(" when calculating the royalty amount. Subsequent invocations of "),a("code",[t._v("royaltyInfo()")]),t._v(" "),a("strong",[t._v("MAY")]),t._v(" return a different "),a("code",[t._v("royaltyAmount")]),t._v(". Though there are some important considerations for implementers if they choose to perform different percentage calculations between "),a("code",[t._v("royaltyInfo()")]),t._v(" invocations.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("royaltyInfo()")]),t._v(" function is not aware of the unit of exchange for the sale and royalty payment. With that in mind, implementers "),a("strong",[t._v("MUST NOT")]),t._v(" return a fixed/constant "),a("code",[t._v("royaltyAmount")]),t._v(", wherein they're ignoring the "),a("code",[t._v("_salePrice")]),t._v(". For the same reason, implementers "),a("strong",[t._v("MUST NOT")]),t._v(" determine the "),a("code",[t._v("royaltyAmount")]),t._v(" based on comparing the "),a("code",[t._v("_salePrice")]),t._v(" with constant numbers. In both cases, the "),a("code",[t._v("royaltyInfo()")]),t._v(" function makes assumptions on the unit of exchange, which "),a("strong",[t._v("MUST")]),t._v(" be avoided.")]),t._v(" "),a("p",[t._v("The percentage value used must be independent of the sale price for reasons previously mentioned (i.e. if the percentage value 10%, then 10% "),a("strong",[t._v("MUST")]),t._v(" apply whether "),a("code",[t._v("_salePrice")]),t._v(" is 10, 10000 or 1234567890). If the royalty fee calculation results in a remainder, implementers "),a("strong",[t._v("MAY")]),t._v(" round up or round down to the nearest integer. For example, if the royalty fee is 10% and "),a("code",[t._v("_salePrice")]),t._v(" is 999, the implementer can return either 99 or 100 for "),a("code",[t._v("royaltyAmount")]),t._v(", both are valid.")]),t._v(" "),a("p",[t._v("The implementer "),a("strong",[t._v("MAY")]),t._v(" choose to change the percentage value based on other predictable variables that do not make assumptions about the unit of exchange. For example, the percentage value may drop linearly over time. An approach like this "),a("strong",[t._v("SHOULD NOT")]),t._v(" be based on variables that are unpredictable like "),a("code",[t._v("block.timestamp")]),t._v(", but instead on other more predictable state changes. One more reasonable approach "),a("strong",[t._v("MAY")]),t._v(" use the number of transfers of an NFT to decide which percentage value is used to calculate the "),a("code",[t._v("royaltyAmount")]),t._v(". The idea being that the percentage value could decrease after each transfer of the NFT. Another example could be using a different percentage value for each unique "),a("code",[t._v("_tokenId")]),t._v(".")]),t._v(" "),a("p",[t._v("Marketplaces that support this standard "),a("strong",[t._v("SHOULD NOT")]),t._v(" send a zero-value transaction if the "),a("code",[t._v("royaltyAmount")]),t._v(" returned is "),a("code",[t._v("0")]),t._v(". This would waste gas and serves no useful purpose in this EIP.")]),t._v(" "),a("p",[t._v("Marketplaces that support this standard "),a("strong",[t._v("MUST")]),t._v(" pay royalties no matter where the sale occurred or in what currency, including on-chain sales, over-the-counter (OTC) sales and off-chain sales such as at auction houses. As royalty payments are voluntary, entities that respect this EIP must pay no matter where the sale occurred - a sale conducted outside of the blockchain is still a sale. The exact mechanism for paying and notifying the recipient will be defined in future EIPs.")]),t._v(" "),a("p",[t._v("Implementers of this standard "),a("strong",[t._v("MUST")]),t._v(" have all of the following functions:")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pragma")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("solidity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token version number"}},[t._v("0.6.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./IERC165.sol"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Interface for the NFT Royalty Standard")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IERC2981")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" IERC165 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// ERC165 bytes to add to interface array - set in parent contract")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// implementing this standard")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// bytes4(keccak256("royaltyInfo(uint256,uint256)")) == 0x2a55205a')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// bytes4 private constant _INTERFACE_ID_ERC2981 = 0x2a55205a;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// _registerInterface(_INTERFACE_ID_ERC2981);")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice Called with the sale price to determine how much royalty")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//          is owed and to whom.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _tokenId - the NFT asset queried for royalty information")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _salePrice - the sale price of the NFT asset specified by _tokenId")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return receiver - address of who should be sent the royalty payment")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return royaltyAmount - the royalty payment amount for _salePrice")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("royaltyInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" _tokenId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" _salePrice\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" receiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" royaltyAmount\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IERC165")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice Query if a contract implements an interface")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param interfaceID The interface identifier, as specified in ERC-165")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Interface identification is specified in ERC-165. This function")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///  uses less than 30,000 gas.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return `true` if the contract implements `interfaceID` and")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///  `interfaceID` is not 0xffffffff, `false` otherwise")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("supportsInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes4")]),t._v(" interfaceID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br")])]),a("h3",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("p",[t._v("This standard being used on an ERC-721 during deployment:")]),t._v(" "),a("h4",{attrs:{id:"deploying-an-erc-721-and-signaling-support-for-erc-2981"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-an-erc-721-and-signaling-support-for-erc-2981"}},[t._v("#")]),t._v(" Deploying an ERC-721 and signaling support for ERC-2981")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" baseURI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _symbol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_setBaseURI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("baseURI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// register the supported interfaces to conform to ERC721 via ERC165")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_registerInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_INTERFACE_ID_ERC721"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_registerInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_INTERFACE_ID_ERC721_METADATA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_registerInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_INTERFACE_ID_ERC721_ENUMERABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Royalties interface")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_registerInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_INTERFACE_ID_ERC2981"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h4",{attrs:{id:"checking-if-the-nft-being-sold-on-your-marketplace-implemented-royalties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checking-if-the-nft-being-sold-on-your-marketplace-implemented-royalties"}},[t._v("#")]),t._v(" Checking if the NFT being sold on your marketplace implemented royalties")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constant")]),t._v(" _INTERFACE_ID_ERC2981 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2a55205a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkRoyalties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _contract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("internal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("IERC165")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_contract"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("supportsInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_INTERFACE_ID_ERC2981"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"rationale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[t._v("#")]),t._v(" Rationale")]),t._v(" "),a("h3",{attrs:{id:"optional-royalty-payments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optional-royalty-payments"}},[t._v("#")]),t._v(" Optional royalty payments")]),t._v(" "),a("p",[t._v("It is impossible to know which NFT transfers are the result of sales, and which are merely wallets moving or consolidating their NFTs. Therefore, we cannot force every transfer function, such as "),a("code",[t._v("transferFrom()")]),t._v(" in ERC-721, to involve a royalty payment as not every transfer is a sale that would require such payment. We believe the NFT marketplace ecosystem will voluntarily implement this royalty payment standard to provide ongoing funding for artists/creators. NFT buyers will assess the royalty payment as a factor when making NFT purchasing decisions.")]),t._v(" "),a("h3",{attrs:{id:"simple-royalty-payments-to-a-single-address"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-royalty-payments-to-a-single-address"}},[t._v("#")]),t._v(" Simple royalty payments to a single address")]),t._v(" "),a("p",[t._v("This EIP does not specify the manner of payment to the royalty recipient. Furthermore, it is impossible to fully know and efficiently implement all possible types of royalty payments logic. With that said, it is on the royalty payment receiver to implement all additional complexity and logic for fee splitting, multiple receivers, taxes, accounting, etc. in their own receiving contract or off-chain processes. Attempting to do this as part of this standard, it would dramatically increase the implementation complexity, increase gas costs, and could not possibly cover every potential use-case. This ERC should be considered a minimal, gas-efficient building block for further innovation in NFT royalty payments. Future EIPs can specify more details regarding payment transfer and notification.")]),t._v(" "),a("h3",{attrs:{id:"royalty-payment-percentage-calculation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#royalty-payment-percentage-calculation"}},[t._v("#")]),t._v(" Royalty payment percentage calculation")]),t._v(" "),a("p",[t._v("This EIP mandates a percentage-based royalty fee model. It is likely that the most common case of percentage calculation will be where the "),a("code",[t._v("royaltyAmount")]),t._v(" is always calculated from the "),a("code",[t._v("_salePrice")]),t._v(" using a fixed percent i.e. if the royalty fee is 10%, then a 10% royalty fee must apply whether "),a("code",[t._v("_salePrice")]),t._v(" is 10, 10000 or 1234567890.")]),t._v(" "),a("p",[t._v("As previously mentioned, implementers can get creative with this percentage-based calculation but there are some important caveats to consider. Mainly, ensuring that the "),a("code",[t._v("royaltyInfo()")]),t._v(" function is not aware of the unit of exchange and that unpredictable variables are avoided in the percentage calculation. To follow up on the earlier "),a("code",[t._v("block.timestamp")]),t._v(" example, there is some nuance which can be highlighted if the following events ensued:")]),t._v(" "),a("ol",[a("li",[t._v("Marketplace sells NFT.")]),t._v(" "),a("li",[t._v("Marketplace delays "),a("code",[t._v("X")]),t._v(" days before invoking "),a("code",[t._v("royaltyInfo()")]),t._v(" and sending payment.")]),t._v(" "),a("li",[t._v("Marketplace receives "),a("code",[t._v("Y")]),t._v(" for "),a("code",[t._v("royaltyAmount")]),t._v(" which was significantly different from the "),a("code",[t._v("royaltyAmount")]),t._v(" amount that would've been calculated "),a("code",[t._v("X")]),t._v(" days prior if no delay had occurred.")]),t._v(" "),a("li",[t._v("Royalty recipient is dissatisfied with the delay from the marketplace and for this reason, they raise a dispute.")])]),t._v(" "),a("p",[t._v("Rather than returning a percentage and letting the marketplace calculate the royalty amount based on the sale price, a "),a("code",[t._v("royaltyAmount")]),t._v(" value is returned so there is no dispute with a marketplace over how much is owed for a given sale price. The royalty fee payer must pay the "),a("code",[t._v("royaltyAmount")]),t._v(" that "),a("code",[t._v("royaltyInfo()")]),t._v(" stipulates.")]),t._v(" "),a("h3",{attrs:{id:"unit-less-royalty-payment-across-all-marketplaces-both-on-chain-and-off-chain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unit-less-royalty-payment-across-all-marketplaces-both-on-chain-and-off-chain"}},[t._v("#")]),t._v(" Unit-less royalty payment across all marketplaces, both on-chain and off-chain")]),t._v(" "),a("p",[t._v("This EIP does not specify a currency or token used for sales and royalty payments. The same percentage-based royalty fee must be paid regardless of what currency, or token was used in the sale, paid in the same currency or token. This applies to sales in any location including on-chain sales, over-the-counter (OTC) sales, and off-chain sales using fiat currency such as at auction houses. As royalty payments are voluntary, entities that respect this EIP must pay no matter where the sale occurred - a sale outside of the blockchain is still a sale. The exact mechanism for paying and notifying the recipient will be defined in future EIPs.")]),t._v(" "),a("h3",{attrs:{id:"universal-royalty-payments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#universal-royalty-payments"}},[t._v("#")]),t._v(" Universal Royalty Payments")]),t._v(" "),a("p",[t._v("Although designed specifically with NFTs in mind, this standard does not require that a contract implementing EIP-2981 is compatible with either ERC-721 or ERC-1155 standards. Any other contract could use this interface to return royalty payment information, provided that it is able to uniquely identify assets within the constraints of the interface. ERC-2981 is, therefore, a universal royalty standard for many other asset types.")]),t._v(" "),a("h2",{attrs:{id:"backwards-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[t._v("#")]),t._v(" Backwards Compatibility")]),t._v(" "),a("p",[t._v("This standard is compatible with current ERC-721 and ERC-1155 standards.")]),t._v(" "),a("h2",{attrs:{id:"security-considerations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security-considerations"}},[t._v("#")]),t._v(" Security Considerations")]),t._v(" "),a("p",[t._v("There are no security considerations related directly to the implementation of this standard.")]),t._v(" "),a("h2",{attrs:{id:"copyright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[t._v("#")]),t._v(" Copyright")]),t._v(" "),a("p",[t._v("Copyright and related rights waived via "),a("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC0"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);