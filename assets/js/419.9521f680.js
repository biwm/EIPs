(window.webpackJsonp=window.webpackJsonp||[]).push([[419],{827:function(t,a,s){"use strict";s.r(a);var e=s(46),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"simple-summary"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[t._v("#")]),t._v(" Simple Summary")]),t._v(" "),s("p",[t._v("This EIP modifies ethash in order to break ASIC miners specialized for the current ethash\nmining algorithm.")]),t._v(" "),s("h2",{attrs:{id:"abstract"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),s("p",[t._v('There are companies who currently have dedicated hardware based ethereum miners in\nproduction, and may be actively mining.  This EIP aims to "poison\nthe well" by modifying the block mining algorithm in a low risk manner that\nmay '),s("em",[t._v('"break"')]),t._v(" these miners if they are in-fact built as traditional ASICs.")]),t._v(" "),s("h2",{attrs:{id:"motivation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[t._v("#")]),t._v(" Motivation")]),t._v(" "),s("p",[t._v("ASIC-based miners will have lower operational costs than GPU-based miners, which\nwill result in GPU-based mining quickly becoming unprofitable.  Given that\nproduction of ASIC-based miners has a high barrier to entry and few market players,\nthis will cause a trend towards centralization of mining power.")]),t._v(" "),s("p",[t._v("Risks include market dominance by a single manufacturer that may utilize production\nstock to mine themselves, introduce backdoors in their hardware, or facilitate a 51%\nattack that would otherwise be infeasible.")]),t._v(" "),s("p",[t._v("This trend towards centralization has a negative effect on network security,\nputting significant control of the network in the hands of only a few entities.")]),t._v(" "),s("p",[t._v("Ethash remains ASIC-resistant, however ASIC manufacturer technology is advancing\nand ethash may require further changes in order to remain resistant to unforeseen\ndesign techniques. This EIP seeks explicitly to buy time during which newly-developed\nASIC technology will face a barrier while more long-term mechanisms to ensure\ncontinued ASIC resistance can be explored.")]),t._v(" "),s("h2",{attrs:{id:"specification"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[t._v("#")]),t._v(" Specification")]),t._v(" "),s("p",[t._v("If "),s("code",[t._v("block.number >= ASIC_MITIGATION_FORK_BLKNUM")]),t._v(", require that the ethash solution\nsealing the block has been mined using "),s("code",[t._v("ethashV2")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"ethashv2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ethashv2"}},[t._v("#")]),t._v(" EthashV2")]),t._v(" "),s("p",[s("code",[t._v("ethashV2")]),t._v(" will be identical in specification to the current "),s("code",[t._v("ethash")]),t._v("(v1) algorithm, with\nthe exception of the implementation of "),s("code",[t._v("fnv")]),t._v(".")]),t._v(" "),s("p",[t._v("The new algorithm replaces the 5 current uses of "),s("code",[t._v("fnv")]),t._v(" inside "),s("code",[t._v("hashimoto")]),t._v(" with 5\nseparate instances defined as "),s("code",[t._v("fnvA")]),t._v(", "),s("code",[t._v("fnvB")]),t._v(", "),s("code",[t._v("fnvC")]),t._v(", "),s("code",[t._v("fnvD")]),t._v(", and "),s("code",[t._v("fnvE")]),t._v(", utilizing")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("FNV_PRIME_A"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001a7")]),t._v("\nFNV_PRIME_B"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001ab")]),t._v("\nFNV_PRIME_C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001cf")]),t._v("\nFNV_PRIME_D"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001e3")]),t._v("\nFNV_PRIME_E"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001f9")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("code",[t._v("fnvA")]),t._v(" replaces "),s("code",[t._v("fnv")]),t._v(" in the DAG item selection step;\n"),s("code",[t._v("fnvB")]),t._v(" replaces "),s("code",[t._v("fnv")]),t._v(" in the DAG item mix step;\n"),s("code",[t._v("fnvC(fnvD(fnvE")]),t._v(" replaces "),s("code",[t._v("fnv(fnv(fnv(")]),t._v(" in the compress mix step.")]),t._v(" "),s("p",[s("code",[t._v("fnv")]),t._v(" as utilized in DAG-item creation should remain unchanged.")]),t._v(" "),s("h2",{attrs:{id:"agent-changes-optional-variant"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#agent-changes-optional-variant"}},[t._v("#")]),t._v(" Agent Changes (Optional Variant)")]),t._v(" "),s("p",[t._v("The JSON-RPC "),s("code",[t._v("eth_GetWork")]),t._v(" call may optionally return the proposed blocks algorithm.\nWhile a miner or pool may infer the requirement for "),s("code",[t._v("ethashV2")]),t._v(" based on the computed\nepoch of the provided seedHash, it is beneficial to explicitly provide this\nfield so a miner does not require special configuration when mining on a chain\nthat chooses not to implement the "),s("code",[t._v("ASIC_Mitigation")]),t._v(" hardfork.")]),t._v(" "),s("p",[t._v("Due to compatibility concerns with implementations that already add additional\nparameters to "),s("code",[t._v("GetWork")]),t._v(", it is desired to add "),s("code",[t._v("BlockNumber")]),t._v(" as an explicit 4th parameter\nas suggested in https://github.com/ethereum/go-ethereum/issues/2333. Algorithm\nshould then be returned as either "),s("code",[t._v('"ethash"')]),t._v(" or "),s("code",[t._v('"ethashV2"')]),t._v(" according to the\n"),s("code",[t._v("block.number >= ASIC_MITIGATION_FORK_BLKNUM")]),t._v(" criteria.")]),t._v(" "),s("h2",{attrs:{id:"rationale"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[t._v("#")]),t._v(" Rationale")]),t._v(" "),s("p",[t._v("This EIP is aimed at breaking existing ASIC-based miners via small changes to the\nexisting ethash algorithm.  We hope to accomplish the following:")]),t._v(" "),s("ol",[s("li",[t._v("Break existing ASIC-based miners.")]),t._v(" "),s("li",[t._v("Demonstrate a willingness to fork in the event of future ASIC miner production.")])]),t._v(" "),s("p",[t._v("Goal #1 is something that we can only do probabilistically without detailed\nknowledge of existing ASIC miner design. The known released miner is available for\npurchase "),s("a",{attrs:{href:"https://shop.bitmain.com/product/detail?pid=00020180403174908564M8dMJKtz06B7",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(",\nwith delivery slated for mid-summer 2018.")]),t._v(" "),s("p",[t._v("Our approach should balance the inherent security risks involved with changing\nthe mining algorithm with the risk that the change we make does not break existing\nASIC miners.  This EIP leans towards minimizing the security risks by making minimal\nchanges to the algorithm, accepting the risk that the change may not break dedicated\nhardware miners that utilize partially- or fully-configurable logic.")]),t._v(" "),s("p",[t._v("Furthermore, we do not wish to introduce significant algorithm changes that\nmay alter the power utilization or performance profile of existing GPU hardware.")]),t._v(" "),s("p",[t._v("The change of FNV constant is a minimal change that can be quickly\nimplemented across the various network node and miner implementations.")]),t._v(" "),s("p",[t._v("It is proposed that "),s("code",[t._v("ASIC_MITIGATION_FORK_BLKNUM")]),t._v(" be no more than 5550000 (epoch 185), giving\naround 30 days of notice to node and miner developers and a sufficient window\nfor formal analysis of the changes by experts. We must weigh this window against\nthe risk introduced by allowing ASICs that may exist to continue to propagate\non the network, as well as the risk of providing too much advanced warning to\nASIC developers.")]),t._v(" "),s("p",[t._v("It is further understood that this change will not prevent redesign of existing\ndedicated hardware with new ASIC chips. The intention of this change is only\nto disable currently active or mid-production hardware and provide time for\nPOS development as well as larger algorithim changes to be well analyzed by\nexperts.")]),t._v(" "),s("p",[t._v("The choice of FNV constants is made based on the formal specification at\nhttps://tools.ietf.org/html/draft-eastlake-fnv-14#section-2.1")]),t._v(" "),s("p",[t._v("@goobur provided the following python code to output primes matching this criteria:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("candidates "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("xrange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ncandidates "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" candidates "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" is_prime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x%x"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" candidates "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("The minimal prime constraint was relaxed, as has already been the case in "),s("code",[t._v("ethashV1")]),t._v(".")]),t._v(" "),s("p",[t._v("Typical ASIC synthesis tools would optimize multiplication of a constant\nin the FNV algorithm, while reducing the area needed for the multiplier according\nto the hamming weight of the constant. To reduce the chance of ASIC adaptation\nthrough minor mask changes, we propose choosing new constants with a larger\nhamming weight, however care should be taken not to choose constants with too\nlarge of a weight.")]),t._v(" "),s("p",[t._v("The current FNV prime, "),s("code",[t._v("0x1000193")]),t._v(", has a hamming weight of 6.")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HammingWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001a7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HammingWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001ab")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HammingWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001cf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HammingWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001e3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HammingWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001ef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Not chosen")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HammingWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001f9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("HammingWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001fb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Not chosen")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("An analysis can be done regarding the dispersion of these constants as compared to\n"),s("code",[t._v("0x01000193")]),t._v(", using the following snippet.")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://eips.ethereum.org/EIPS/eip-969")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdlib.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<string.h>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("u_int32_t")]),t._v(" candidate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("u_int32_t")]),t._v(" dups "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("u_int32_t")]),t._v(" fnv_candidate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x10001a7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MODIFY!")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("u_int8_t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("counts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFFFF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("memset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFFFF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candidate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" candidate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xFFFFFFFF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" candidate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("u_int32_t")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("u_int32_t")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candidate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" fnv_candidate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("u_int8_t")]),t._v(" oldCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" counts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        counts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" counts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            dups"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//// progress display: remove comment to speed down")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//if ((candidate & 0xFFFFF) == 0xFFFFF) printf("0x%08x\\n", candidate);')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\nFNV candidate 0x%08x : %i dups\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fnv_candidate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dups"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br")])]),s("p",[t._v("It can be empirically confirmed that no more than 1 duplicate occurs in the\n32-bit word space with these constants.")]),t._v(" "),s("p",[t._v("It is worth noting that FNV is not a cryptographic hash, and it is not used as\nsuch in ethash. That said, a more invasive hash algorithm change could be considered.")]),t._v(" "),s("p",[t._v("One suggestion has been "),s("a",{attrs:{href:"https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("MurmurHash3"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://twitter.com/el33th4xor/status/981292363627810818",target:"_blank",rel:"noopener noreferrer"}},[t._v("Other suggestions have been made"),s("OutboundLink")],1),t._v(":\n"),s("a",{attrs:{href:"https://github.com/P-H-C/phc-winner-argon2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Argon2"),s("OutboundLink")],1),t._v(",\n"),s("a",{attrs:{href:"https://blog.z.cash/why-equihash/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Equihash"),s("OutboundLink")],1),t._v(" of Zcash fame, and\n"),s("a",{attrs:{href:"https://crypto.stanford.edu/balloon/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Balloon Hashing"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Another possible candidate is "),s("a",{attrs:{href:"https://github.com/tromp/cuckoo",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cuckoo Cycle"),s("OutboundLink")],1),t._v(",\nalthough there are some concerns regarding unaddressed optimization\nvulnerabilities. One review can be found\n"),s("a",{attrs:{href:"https://da-data.blogspot.com/2014/03/a-public-review-of-cuckoo-cycle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("This may be considered once the exact mechanism of the released ASICs is known and\ntheir effectiveness against its optimisations can be fully evaluated.")]),t._v(" "),s("h2",{attrs:{id:"backwards-compatibility"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[t._v("#")]),t._v(" Backwards Compatibility")]),t._v(" "),s("p",[t._v("This change implements a backwards incompatible change to proof of work based\nblock mining.  All existing miners will be required to update to clients which\nimplement this new algorithm, and all nodes will require updates to accept\nsolutions from the new proof of work algorithm.")]),t._v(" "),s("h2",{attrs:{id:"test-cases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test-cases"}},[t._v("#")]),t._v(" Test Cases")]),t._v(" "),s("p",[t._v("TODO: will need to generate test cases for "),s("code",[t._v("ethereum/tests")]),t._v(" repository corresponding to the consensus\nchanges.")]),t._v(" "),s("h2",{attrs:{id:"implementation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[t._v("#")]),t._v(" Implementation")]),t._v(" "),s("p",[t._v("TODO")]),t._v(" "),s("h2",{attrs:{id:"copyright"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[t._v("#")]),t._v(" Copyright")]),t._v(" "),s("p",[t._v("Copyright and related rights waived via "),s("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC0"),s("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);a.default=n.exports}}]);