(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{543:function(t,e,a){"use strict";a.r(e);var s=a(46),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"simple-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[t._v("#")]),t._v(" Simple Summary")]),t._v(" "),a("p",[t._v("A standard interface for ownership of contracts.")]),t._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),a("p",[t._v("This specification defines standard functions for owning or controlling a contract.")]),t._v(" "),a("p",[t._v("An implementation allows reading the current owner ("),a("code",[t._v("owner() returns (address)")]),t._v(") and transferring ownership ("),a("code",[t._v("transferOwnership(address newOwner)")]),t._v(") along with a standardized event for when ownership is changed ("),a("code",[t._v("OwnershipTransferred(address indexed previousOwner, address indexed newOwner)")]),t._v(").")]),t._v(" "),a("h2",{attrs:{id:"motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[t._v("#")]),t._v(" Motivation")]),t._v(" "),a("p",[t._v("Many smart contracts require that they be owned or controlled in some way. For example to withdraw funds or perform administrative actions. It is so common that the contract interface used to handle contract ownership should be standardized to allow compatibility with user interfaces and contracts that manage contracts.")]),t._v(" "),a("p",[t._v("Here are some examples of kinds of contracts and applications that can benefit from this standard:")]),t._v(" "),a("ol",[a("li",[t._v("Exchanges that buy/sell/auction ethereum contracts. This is only widely possible if there is a standard for getting the owner of a contract and transferring ownership.")]),t._v(" "),a("li",[t._v("Contract wallets that hold the ownership of contracts and that can transfer the ownership of contracts.")]),t._v(" "),a("li",[t._v("Contract registries. It makes sense for some registries to only allow the owners of contracts to add/remove their contracts. A standard must exist for these contract registries to verify that a contract is being submitted by the owner of it before accepting it.")]),t._v(" "),a("li",[t._v("User interfaces that show and transfer ownership of contracts.")])]),t._v(" "),a("h2",{attrs:{id:"specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[t._v("#")]),t._v(" Specification")]),t._v(" "),a("p",[t._v("Every ERC-173 compliant contract must implement the "),a("code",[t._v("ERC173")]),t._v(" interface. Contracts should also implement "),a("code",[t._v("ERC165")]),t._v(" for the ERC-173 interface.")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @title ERC-173 Contract Ownership Standard")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///  Note: the ERC-165 identifier for this interface is 0x7f5828d0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ERC173")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* is ERC165 */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev This emits when ownership of a contract changes.    ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OwnershipTransferred")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("indexed")]),t._v(" previousOwner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("indexed")]),t._v(" newOwner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice Get the address of the owner    ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return The address of the owner.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice Set the address of the new owner of the contract")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Set _newOwner to address(0) to renounce any ownership.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _newOwner The address of the new owner of the contract    ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transferOwnership")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _newOwner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ERC165")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice Query if a contract implements an interface")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param interfaceID The interface identifier, as specified in ERC-165")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Interface identification is specified in ERC-165. This function")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///  uses less than 30,000 gas.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return `true` if the contract implements `interfaceID` and")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///  `interfaceID` is not 0xffffffff, `false` otherwise")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("supportsInterface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes4")]),t._v(" interfaceID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("p",[t._v("The "),a("code",[t._v("owner()")]),t._v(" function may be implemented as "),a("code",[t._v("pure")]),t._v(" or "),a("code",[t._v("view")]),t._v(".")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("transferOwnership(address _newOwner)")]),t._v(" function may be implemented as "),a("code",[t._v("public")]),t._v(" or "),a("code",[t._v("external")]),t._v(".")]),t._v(" "),a("p",[t._v("To renounce any ownership of a contract set "),a("code",[t._v("_newOwner")]),t._v(" to the zero address: "),a("code",[t._v("transferOwnership(address(0))")]),t._v(". If this is done then a contract is no longer owned by anybody.")]),t._v(" "),a("p",[t._v("The OwnershipTransferred event should be emitted when a contract is created.")]),t._v(" "),a("h2",{attrs:{id:"rationale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[t._v("#")]),t._v(" Rationale")]),t._v(" "),a("p",[t._v("Key factors influencing the standard:")]),t._v(" "),a("ul",[a("li",[t._v("Keeping the number of functions in the interface to a minimum to prevent contract bloat.")]),t._v(" "),a("li",[t._v("Backwards compatibility with existing contracts.")]),t._v(" "),a("li",[t._v("Simplicity")]),t._v(" "),a("li",[t._v("Gas efficient")])]),t._v(" "),a("p",[t._v("Several ownership schemes were considered. The scheme chosen in this standard was chosen because of its simplicity, low gas cost and backwards compatibility with existing contracts.")]),t._v(" "),a("p",[t._v("Here are other schemes that were considered:")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Associating an Ethereum Name Service (ENS) domain name with a contract.")]),t._v(" A contract's "),a("code",[t._v("owner()")]),t._v(" function could look up the owner address of a particular ENS name and use that as the owning address of the contract. Using this scheme a contract could be transferred by transferring the ownership of the ENS domain name to a different address. Short comings to this approach are that it is not backwards compatible with existing contracts and requires gas to make external calls to ENS related contracts to get the owner address.")]),t._v(" "),a("li",[a("strong",[t._v("Associating an ERC721-based non-fungible token (NFT) with a contract.")]),t._v(" Ownership of a contract could be tied to the ownership of an NFT. The benefit of this approach is that the existing ERC721-based infrastructure could be used to sell/buy/auction contracts. Short comings to this approach are additional complexity and infrastructure required. A contract could be associated with a particular NFT but the NFT would not track that it had ownership of a contract unless it was programmed to track contracts. In addition handling ownership of contracts this way is not backwards compatible.")])]),t._v(" "),a("p",[t._v("This standard does not exclude the above ownership schemes or other schemes from also being implemented in the same contract. For example a contract could implement this standard and also implement the other schemes so that ownership could be managed and transferred in multiple ways. This standard does provide a simple ownership scheme that is backwards compatible, is light-weight and simple to implement, and can be widely adopted and depended on.")]),t._v(" "),a("p",[t._v("This standard can be extended by other standards to add additional ownership functionality. For example "),a("RouterLink",{attrs:{to:"/eip-2767.html"}},[t._v("EIP-2767")]),t._v(" uses and extends this standard by adding decentralized contract ownership governance.")],1),t._v(" "),a("h2",{attrs:{id:"security-considerations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security-considerations"}},[t._v("#")]),t._v(" Security Considerations")]),t._v(" "),a("p",[t._v("If the address returned by "),a("code",[t._v("owner()")]),t._v(" is an externally owned account then its private key must not be lost or compromised.")]),t._v(" "),a("h2",{attrs:{id:"backwards-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[t._v("#")]),t._v(" Backwards Compatibility")]),t._v(" "),a("p",[t._v("Many existing contracts already implement this standard.")]),t._v(" "),a("h2",{attrs:{id:"implementations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implementations"}},[t._v("#")]),t._v(" Implementations")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenZeppelin's implementation of Ownable"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/0xcert/ethereum-erc721/blob/master/src/contracts/ownership/ownable.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("0xcert ownable"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/FriendlyUser/solidity-smart-contracts//blob/v0.2.0/contracts/other/CredVert/Ownable.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("FriendlyUser Ownable"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"copyright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[t._v("#")]),t._v(" Copyright")]),t._v(" "),a("p",[t._v("Copyright and related rights waived via "),a("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC0"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);