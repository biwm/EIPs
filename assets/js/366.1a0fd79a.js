(window.webpackJsonp=window.webpackJsonp||[]).push([[366],{770:function(t,a,e){"use strict";e.r(a);var i=e(46),s=Object(i.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"abstract"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),e("p",[t._v("Reject transactions that do not explicitly have the same chainId as the node's configuration.")]),t._v(" "),e("h2",{attrs:{id:"motivation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[t._v("#")]),t._v(" Motivation")]),t._v(" "),e("p",[t._v("Per "),e("RouterLink",{attrs:{to:"/eip-155.html"}},[t._v("EIP-155")]),t._v(" a transaction with a "),e("code",[t._v("chainId = 0")]),t._v(" is considered to be a valid\ntransaction. This was a feature to offer developers the ability to sumbit replayable transactions\nacross different chains. With the rise of evm compatible chains, many of which use forks, or packages\nfrom popular Ethereum clients, we are putting user funds at risk. This is because most wallet\ninterfaces do not expose the chainId to the user, meaning they typically do not have insight\ninto what chainId they are signing. Should a malicious actor (or accidental) choose to, they\ncan easily have users submit transactions with a "),e("code",[t._v("chainId = 0")]),t._v(" on a non-mainnet network, allowing\nthe malicious actor to replay the transaction on ethereum mainnet (or other networks for that matter)\nas a grief or sophisticated attack.")],1),t._v(" "),e("h2",{attrs:{id:"specification"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[t._v("#")]),t._v(" Specification")]),t._v(" "),e("p",[t._v("As of the fork block "),e("code",[t._v("N")]),t._v(", consider transactions with a "),e("code",[t._v("chaindId = 0")]),t._v(" to be invalid. Such that\ntransactions are verified based on the nodes configuration. Eg:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("if (node.cfg.chainId != tx.chainId) {\n    // Reject transaction\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"rationale"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[t._v("#")]),t._v(" Rationale")]),t._v(" "),e("p",[t._v("The configuration set by the node is the main source of truth, and thus should be explicitly used\nwhen deciding how to filter out a transaction. This check should exist in two places, as a filter\non the JSON-RPC (eg: "),e("code",[t._v("eth_sendTransaction")]),t._v("), and stricly enforced on the EVM during transaction\nvalidation.")]),t._v(" "),e("p",[t._v("This ensures that users will not have transactions pending that will be guaranteed to fail, and\nprevents the transaction from being included in a block.")]),t._v(" "),e("h2",{attrs:{id:"backwards-compatibility"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[t._v("#")]),t._v(" Backwards Compatibility")]),t._v(" "),e("p",[t._v("This breaks all applications or tooling that submit transactions with a "),e("code",[t._v("chainId == 0")]),t._v(" after block number "),e("code",[t._v("N")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"test-cases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test-cases"}},[t._v("#")]),t._v(" Test Cases")]),t._v(" "),e("p",[t._v("TBD")]),t._v(" "),e("h2",{attrs:{id:"security-considerations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#security-considerations"}},[t._v("#")]),t._v(" Security Considerations")]),t._v(" "),e("p",[t._v("It should be noted this will not prevent a malicious actor from deploying a network with "),e("code",[t._v("chainId = 1")]),t._v(", or copying any other networks chainId.")]),t._v(" "),e("h2",{attrs:{id:"copyright"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[t._v("#")]),t._v(" Copyright")]),t._v(" "),e("p",[t._v("Copyright and related rights waived via "),e("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC0"),e("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);a.default=s.exports}}]);