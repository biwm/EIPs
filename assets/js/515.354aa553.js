(window.webpackJsonp=window.webpackJsonp||[]).push([[515],{924:function(e,t,a){"use strict";a.r(t);var s=a(46),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"hard-fork"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hard-fork"}},[e._v("#")]),e._v(" Hard fork")]),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/zh/eip-607.html"}},[e._v("Spurious Dragon")])],1),e._v(" "),a("h3",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" Parameters")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("FORK_BLKNUM")]),e._v(": 2,675,000")]),e._v(" "),a("li",[a("code",[e._v("CHAIN_ID")]),e._v(": 1 (main net)")])]),e._v(" "),a("h3",{attrs:{id:"specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),a("p",[e._v("If "),a("code",[e._v("block.number >= FORK_BLKNUM")]),e._v(" and "),a("code",[e._v("CHAIN_ID")]),e._v(" is available, then when computing the hash of a transaction for the purposes of signing, instead of hashing only six rlp encoded elements "),a("code",[e._v("(nonce, gasprice, startgas, to, value, data)")]),e._v(", you "),a("strong",[e._v("SHOULD")]),e._v(" hash nine rlp encoded elements "),a("code",[e._v("(nonce, gasprice, startgas, to, value, data, chainid, 0, 0)")]),e._v(".  If you do, then the "),a("code",[e._v("v")]),e._v(" of the signature "),a("strong",[e._v("MUST")]),e._v(" be set to "),a("code",[e._v("{0,1} + CHAIN_ID * 2 + 35")]),e._v(" where "),a("code",[e._v("{0,1}")]),e._v(" is the parity of the "),a("code",[e._v("y")]),e._v(" value of the curve point for which "),a("code",[e._v("r")]),e._v(" is the x-value in the secp256k1 signing process.  If you choose to only hash 6 values, then "),a("code",[e._v("v")]),e._v(" continues to be set to "),a("code",[e._v("{0,1} + 27")]),e._v(" as previously.")]),e._v(" "),a("p",[e._v("If "),a("code",[e._v("block.number >= FORK_BLKNUM")]),e._v(" and "),a("code",[e._v("v = CHAIN_ID * 2 + 35")]),e._v(" or "),a("code",[e._v("v = CHAIN_ID * 2 + 36")]),e._v(", then when computing the hash of a transaction for purposes of recovering, instead of hashing six rlp encoded elements "),a("code",[e._v("(nonce, gasprice, startgas, to, value, data)")]),e._v(", hash nine rlp encoded elements "),a("code",[e._v("(nonce, gasprice, startgas, to, value, data, chainid, 0, 0)")]),e._v(". The currently existing signature scheme using "),a("code",[e._v("v = 27")]),e._v(" and "),a("code",[e._v("v = 28")]),e._v(" remains valid and continues to operate under the same rules as it did previously.")]),e._v(" "),a("h3",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("p",[e._v("Consider a transaction with "),a("code",[e._v("nonce = 9")]),e._v(", "),a("code",[e._v("gasprice = 20 * 10**9")]),e._v(", "),a("code",[e._v("startgas = 21000")]),e._v(", "),a("code",[e._v("to = 0x3535353535353535353535353535353535353535")]),e._v(", "),a("code",[e._v("value = 10**18")]),e._v(", "),a("code",[e._v("data=''")]),e._v(" (empty).")]),e._v(" "),a("p",[e._v('The "signing data" becomes:')]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("0xec098504a817c800825208943535353535353535353535353535353535353535880de0b6b3a764000080018080\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v('The "signing hash" becomes:')]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("0xdaf5a779ae972f972197303d7b574746c7ef83eadac0f2791ad23db92e4c8e53\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("If the transaction is signed with the private key "),a("code",[e._v("0x4646464646464646464646464646464646464646464646464646464646464646")]),e._v(", then the v,r,s values become:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("(37, 18515461264373351373200002665853028612451056578545711640558177340181847433846, 46948507304638947509940763649030358759909902576025900602547168820602576006531)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("Notice the use of 37 instead of 27. The signed tx would become:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("0xf86c098504a817c800825208943535353535353535353535353535353535353535880de0b6b3a76400008025a028ef61340bd939bc2195fe537567866003e1a15d3c71ff63e1590620aa636276a067cbe9d8997f761aecb703304b3800ccf555c9f3dc64214b297fb1966a3b6d83\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"rationale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[e._v("#")]),e._v(" Rationale")]),e._v(" "),a("p",[e._v("This would provide a way to send transactions that work on Ethereum without working on ETC or the Morden testnet. ETC is encouraged to adopt this EIP but replacing "),a("code",[e._v("CHAIN_ID")]),e._v(" with a different value, and all future testnets, consortium chains and alt-etherea are encouraged to adopt this EIP replacing "),a("code",[e._v("CHAIN_ID")]),e._v(" with a unique value.")]),e._v(" "),a("h3",{attrs:{id:"list-of-chain-id-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-of-chain-id-s"}},[e._v("#")]),e._v(" List of Chain ID's:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("code",[e._v("CHAIN_ID")])]),e._v(" "),a("th",[e._v("Chain(s)")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("Ethereum mainnet")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("Morden (disused), Expanse mainnet")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("Ropsten")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("Rinkeby")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("Goerli")])]),e._v(" "),a("tr",[a("td",[e._v("42")]),e._v(" "),a("td",[e._v("Kovan")])]),e._v(" "),a("tr",[a("td",[e._v("1337")]),e._v(" "),a("td",[e._v("Geth private chains (default)")])])])]),e._v(" "),a("p",[e._v("Find more chain ID's on "),a("a",{attrs:{href:"https://chainid.network",target:"_blank",rel:"noopener noreferrer"}},[e._v("chainid.network"),a("OutboundLink")],1),e._v(" and contribute to "),a("a",{attrs:{href:"https://github.com/ethereum-lists/chains",target:"_blank",rel:"noopener noreferrer"}},[e._v("ethereum-lists/chains"),a("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=n.exports}}]);