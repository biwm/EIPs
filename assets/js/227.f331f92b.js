(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{623:function(e,t,a){"use strict";a.r(t);var s=a(46),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),a("p",[e._v("To describe the formal process of preparing and activating hard forks.")]),e._v(" "),a("h2",{attrs:{id:"motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),a("p",[e._v("Today discussions about hard forks happen at various forums and sometimes in ad-hoc ways.")]),e._v(" "),a("h2",{attrs:{id:"specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),a("p",[e._v("A Meta EIP should be created and merged as a "),a("em",[e._v("Draft")]),e._v(" as soon as a new hard fork is planned.")]),e._v(" "),a("p",[e._v("This EIP should contain:")]),e._v(" "),a("ul",[a("li",[e._v("the desired codename of the hard fork,")]),e._v(" "),a("li",[e._v("activation block number once decided")]),e._v(" "),a("li",[e._v("a timeline section")]),e._v(" "),a("li",[e._v("an EIPs to include section")]),e._v(" "),a("li",[e._v("the "),a("strong",[e._v("Requires")]),e._v(" header should point to the previous hard fork meta EIP.")])]),e._v(" "),a("p",[e._v("The draft shall be updated with summaries of the decisions around the hard fork.")]),e._v(" "),a("h3",{attrs:{id:"timeline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timeline"}},[e._v("#")]),e._v(" Timeline")]),e._v(" "),a("p",[e._v("Once a timeline with key dates is agreed upon for other crucial dates. The basic outline of a hardfork timeline should include:")]),e._v(" "),a("ul",[a("li",[e._v("Hard deadline to accept proposals for this hard fork")]),e._v(" "),a("li",[e._v("Soft deadline for major client implementations")]),e._v(" "),a("li",[e._v("Projected date for testnet network upgrade")]),e._v(" "),a("li",[e._v("Projected date for mainnet upgrade (the activation block number / projected date for this block)")])]),e._v(" "),a("h3",{attrs:{id:"eip-inclusion-process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eip-inclusion-process"}},[e._v("#")]),e._v(" EIP Inclusion Process")]),e._v(" "),a("p",[e._v("Anyone that wishes to propose a Core EIP for the hard fork should make a PR against the Meta EIP representing the hard fork. The EIP must be published as at least "),a("code",[e._v("Draft")]),e._v(". It enters the "),a("em",[e._v("Proposed EIPs")]),e._v(" section, along with at least one person who is a point of contact for wanting to include the EIP.")]),e._v(" "),a("p",[e._v('EIPs can move states by discussion done on the "'),a("a",{attrs:{href:"https://github.com/ethereum/pm/",target:"_blank",rel:"noopener noreferrer"}},[e._v("All Core Devs Meetings"),a("OutboundLink")],1),e._v('":')]),e._v(" "),a("ul",[a("li",[e._v("If accepted for a hard fork, the EIP should be moved to the "),a("em",[e._v("Accepted EIPs")]),e._v(" section. If the EIP has major client implementations and no security issues by the timeline date, it is scheduled for inclusion.")]),e._v(" "),a("li",[e._v("If rejected from a hard fork, the EIP should be moved to the "),a("em",[e._v("Rejected EIPs")]),e._v(" section.")]),e._v(" "),a("li",[e._v("Once the EIPs in the "),a("em",[e._v("Accepted EIPs")]),e._v(" section have successfully launched on a testnet roll out, they are moved to the "),a("em",[e._v("Included EIPs")]),e._v(" section.")])]),e._v(" "),a("hr"),e._v(" "),a("p",[e._v("The Meta EIP representing the hard fork should move in to the "),a("code",[e._v("Accepted")]),e._v(" state once the changes are frozen (i.e. all referenced EIPs are in the "),a("code",[e._v("Accepted")]),e._v(" state) and in to the "),a("code",[e._v("Final")]),e._v(" state once the hard fork has been activated.")]),e._v(" "),a("h2",{attrs:{id:"template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#template"}},[e._v("#")]),e._v(" Template")]),e._v(" "),a("p",[e._v("A template for the "),a("RouterLink",{attrs:{to:"/eip-1679.html"}},[e._v("Istanbul Hardfork Meta 1679")]),e._v(" is included below ("),a("RouterLink",{attrs:{to:"/eip-1679.html"}},[e._v("source file on GitHub")]),e._v("):")],1),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{% raw %}\n---\neip: 1679\ntitle: "Hardfork Meta: Istanbul"\nauthor: Alex Beregszaszi (@axic), Afri Schoedon (@5chdn)\ntype: Meta\nstatus: Draft\ncreated: 2019-01-04\nrequires: 1716\n---\n\n## Abstract\n\nThis meta-EIP specifies the changes included in the Ethereum hardfork named Istanbul.\n\n## Specification\n\n- Codename: Istanbul\n- Activation: TBD\n\n### Included EIPs\n\n- TBD\n\n### Accepted EIPs\n\n- TBD\n\n### Rejected EIPs\n\n- TBD\n\n### Proposed EIPs\n\n- TBD\n\n## Timeline\n\n* 2019-05-17 (Fri) hard deadline to accept proposals for "Istanbul"\n* 2019-07-19 (Fri) soft deadline for major client implementations\n* 2019-08-14 (Wed) projected date for testnet network upgrade (Ropsten, GÃ¶rli, or ad-hoc testnet)\n* 2019-10-16 (Wed) projected date for mainnet upgrade ("Istanbul")\n\n## References\n\n- TBD (e.g. link to Core Dev notes or other references)\n\n## Copyright\n\nCopyright and related rights waived via [CC0](https://creativecommons.org/publicdomain/zero/1.0/).\n\n{% endraw %}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br"),a("span",{staticClass:"line-number"},[e._v("47")]),a("br"),a("span",{staticClass:"line-number"},[e._v("48")]),a("br"),a("span",{staticClass:"line-number"},[e._v("49")]),a("br"),a("span",{staticClass:"line-number"},[e._v("50")]),a("br"),a("span",{staticClass:"line-number"},[e._v("51")]),a("br"),a("span",{staticClass:"line-number"},[e._v("52")]),a("br")])]),a("h2",{attrs:{id:"rationale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[e._v("#")]),e._v(" Rationale")]),e._v(" "),a("p",[e._v("A meta EIP for coordinating the hard fork should help in visibility and traceability of the scope of changes as well as provide a simple name and/or number for referring to the proposed fork.")]),e._v(" "),a("h2",{attrs:{id:"copyright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),a("p",[e._v("Copyright and related rights waived via "),a("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CC0"),a("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=n.exports}}]);