(window.webpackJsonp=window.webpackJsonp||[]).push([[447],{854:function(t,e,a){"use strict";a.r(e);var s=a(46),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"simple-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[t._v("#")]),t._v(" Simple Summary")]),t._v(" "),a("p",[t._v("A registry for key and attribute management of lightweight blockchain identities.")]),t._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),a("p",[t._v("This ERC describes a standard for creating and updating identities with a limited use of blockchain resources. An identity can have an unlimited number of "),a("code",[t._v("delegates")]),t._v(" and "),a("code",[t._v("attributes")]),t._v(" associated with it. Identity creation is as simple as creating a regular key pair ethereum account, which means that it's free (no gas costs) and all ethereum accounts are valid identities. Furthermore this ERC is fully "),a("a",{attrs:{href:"https://w3c-ccg.github.io/did-spec/",target:"_blank",rel:"noopener noreferrer"}},[t._v("DID compliant"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[t._v("#")]),t._v(" Motivation")]),t._v(" "),a("p",[t._v("As we have been developing identity systems for the last couple of years at uPort it has become apparent that the cost of identity creation is a large issue. The previous Identity proposal "),a("RouterLink",{attrs:{to:"/zh/eip-725.html"}},[t._v("ERC-725")]),t._v(" faces this exact issue. Our requirements when creating this ERC is that identity creation should be free, and should be possible to do in an offline environment (e.g. refugee scenario). However it must also be possible to rotate keys without changing the primary identifier of the identity. The identity system should be fit to use off-chain as well as on-chain.")],1),t._v(" "),a("h2",{attrs:{id:"definitions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#definitions"}},[t._v("#")]),t._v(" Definitions")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Identifier")]),t._v(": a piece of data that uniquely identifies the identity, an ethereum address")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("delegate")]),t._v(": an address that is delegated for a specific time to perform some sort of function on behalf of an identity")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("delegateType")]),t._v(": the type of a delegate, is determined by a protocol or application higher up Examples:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("did-jwt")])]),t._v(" "),a("li",[a("code",[t._v("raiden")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("attribute")]),t._v(": a piece of data associated with the identity")])])]),t._v(" "),a("h2",{attrs:{id:"specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[t._v("#")]),t._v(" Specification")]),t._v(" "),a("p",[t._v("This ERC specifies a contract called "),a("code",[t._v("EthereumDIDRegistry")]),t._v(" that is deployed once and can then be commonly used by everyone.")]),t._v(" "),a("h3",{attrs:{id:"identity-ownership"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#identity-ownership"}},[t._v("#")]),t._v(" Identity ownership")]),t._v(" "),a("p",[t._v("By default an identity is owned by itself, meaning whoever controls the ethereum account with that address. The owner can be updated to a new key pair account or to a multisig account etc.")]),t._v(" "),a("h4",{attrs:{id:"identityowner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#identityowner"}},[t._v("#")]),t._v(" identityOwner")]),t._v(" "),a("p",[t._v("Returns the owner of the given identity.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("identityOwner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" view "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("returns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"changeowner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changeowner"}},[t._v("#")]),t._v(" changeOwner")]),t._v(" "),a("p",[t._v("Sets the owner of the given identity to another ethereum account.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeOwner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address newOwner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"changeownersigned"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changeownersigned"}},[t._v("#")]),t._v(" changeOwnerSigned")]),t._v(" "),a("p",[t._v("Same as above but with raw signature.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeOwnerSigned")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint8 sigV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address newOwner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"delegate-management"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delegate-management"}},[t._v("#")]),t._v(" Delegate management")]),t._v(" "),a("p",[t._v("Delegates can be used both on- and off-chain. They all have a "),a("code",[t._v("delegateType")]),t._v(" which can be used to specify the purpose of the delegate.")]),t._v(" "),a("h4",{attrs:{id:"validdelegate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validdelegate"}},[t._v("#")]),t._v(" validDelegate")]),t._v(" "),a("p",[t._v("Returns true if the given "),a("code",[t._v("delegate")]),t._v(" is a delegate with type "),a("code",[t._v("delegateType")]),t._v(" of "),a("code",[t._v("identity")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validDelegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 delegateType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address delegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" view "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("returns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"adddelegate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adddelegate"}},[t._v("#")]),t._v(" addDelegate")]),t._v(" "),a("p",[t._v("Adds a new delegate with the given type. "),a("code",[t._v("validity")]),t._v(" indicates the number of seconds that the delegate will be valid for, after which it will no longer be a delegate of "),a("code",[t._v("identity")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addDelegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 delegateType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint validity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"adddelegatesigned"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adddelegatesigned"}},[t._v("#")]),t._v(" addDelegateSigned")]),t._v(" "),a("p",[t._v("Same as above but with raw signature.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addDelegateSigned")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint8 sigV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 delegateType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint validity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"revokedelegate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revokedelegate"}},[t._v("#")]),t._v(" revokeDelegate")]),t._v(" "),a("p",[t._v("Revokes the given "),a("code",[t._v("delegate")]),t._v(" for the given "),a("code",[t._v("identity")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("revokeDelegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 delegateType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address delegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"revokedelegatesigned"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revokedelegatesigned"}},[t._v("#")]),t._v(" revokeDelegateSigned")]),t._v(" "),a("p",[t._v("Same as above but with raw signature.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("revokeDelegateSigned")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint8 sigV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 delegateType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address delegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"attribute-management"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attribute-management"}},[t._v("#")]),t._v(" Attribute management")]),t._v(" "),a("p",[t._v("Attributes contain simple data about the identity. They can be managed only by the owner of the identity.")]),t._v(" "),a("h4",{attrs:{id:"setattribute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setattribute"}},[t._v("#")]),t._v(" setAttribute")]),t._v(" "),a("p",[t._v("Sets an attribute with the given "),a("code",[t._v("name")]),t._v(" and "),a("code",[t._v("value")]),t._v(", valid for "),a("code",[t._v("validity")]),t._v(" seconds.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint validity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"setattributesigned"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setattributesigned"}},[t._v("#")]),t._v(" setAttributeSigned")]),t._v(" "),a("p",[t._v("Same as above but with raw signature.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttributeSigned")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint8 sigV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint validity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"revokeattrubte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revokeattrubte"}},[t._v("#")]),t._v(" revokeAttrubte")]),t._v(" "),a("p",[t._v("Revokes an attribute.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("revokeAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"revokeattributesigned"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revokeattributesigned"}},[t._v("#")]),t._v(" revokeAttributeSigned")]),t._v(" "),a("p",[t._v("Same as above but with raw signature.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("revokeAttributeSigned")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint8 sigV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 sigS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),a("h4",{attrs:{id:"didownerchanged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#didownerchanged"}},[t._v("#")]),t._v(" DIDOwnerChanged")]),t._v(" "),a("p",[t._v("MUST be triggered when "),a("code",[t._v("changeOwner")]),t._v(" or "),a("code",[t._v("changeOwnerSigned")]),t._v(" was successfully called.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("event "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DIDOwnerChanged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  address indexed identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  address owner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  uint previousChange\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h4",{attrs:{id:"diddelegatechanged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diddelegatechanged"}},[t._v("#")]),t._v(" DIDDelegateChanged")]),t._v(" "),a("p",[t._v("MUST be triggered when a change to a delegate was successfully made.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("event "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DIDDelegateChanged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  address indexed identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bytes32 delegateType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  address delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  uint validTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  uint previousChange\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h4",{attrs:{id:"didattrituechanged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#didattrituechanged"}},[t._v("#")]),t._v(" DIDAttritueChanged")]),t._v(" "),a("p",[t._v("MUST be triggered when a change to an attribute was successfully made.")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("event "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DIDAttributeChanged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  address indexed identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bytes32 name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bytes value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  uint validTo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  uint previousChange\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"efficient-lookup-of-events-through-linked-identity-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#efficient-lookup-of-events-through-linked-identity-events"}},[t._v("#")]),t._v(" Efficient lookup of events through linked identity events")]),t._v(" "),a("p",[t._v("Contract Events are a useful feature for storing data from smart contracts exclusively for off-chain use.  Unfortunately current ethereum implementations provide a very inefficient lookup mechanism. By using linked events that always link to the previous block with a change for the identity, we can solve this problem with much improved performance. Each identity has its previously changed block stored in the "),a("code",[t._v("changed")]),t._v(" mapping.")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Lookup "),a("code",[t._v("previousChange")]),t._v(" block for identity")])]),t._v(" "),a("li",[a("p",[t._v("Lookup all events for given identity address using web3, but only for the "),a("code",[t._v("previousChange")]),t._v(" block")])]),t._v(" "),a("li",[a("p",[t._v("Do something with event")])]),t._v(" "),a("li",[a("p",[t._v("Find "),a("code",[t._v("previousChange")]),t._v(" from the event  and repeat")])])]),t._v(" "),a("p",[t._v("Example code:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" history "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npreviousChange "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" didReg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("changed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("previousChange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" filter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" didReg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allEvents")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("topics"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fromBlock"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" previousChange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toBlock"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" previousChange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" events "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLogs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  previousChange "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" event "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    previousChange "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("previousChange\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("     \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"building-a-did-document-for-an-identity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#building-a-did-document-for-an-identity"}},[t._v("#")]),t._v(" Building a DID document for an identity")]),t._v(" "),a("p",[t._v("The primary owner key should be looked up using "),a("code",[t._v("identityOwner(identity)")]),t._v(".  This should be the first of the publicKeys listed. Iterate through the "),a("code",[t._v("DIDDelegateChanged")]),t._v(" events to build a list of additional keys and authentication sections as needed. The list of delegateTypes to include is still to be determined. Iterate through "),a("code",[t._v("DIDAttributeChanged")]),t._v(" events for service entries, encryption public keys and other public names. The attribute names are still to be determined.")]),t._v(" "),a("h2",{attrs:{id:"rationale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[t._v("#")]),t._v(" Rationale")]),t._v(" "),a("p",[t._v("For on-chain interactions Ethereum has a built in account abstraction that can be used regardless of whether the account is a smart contract or a key pair. Any transaction has a "),a("code",[t._v("msg.sender")]),t._v(" as the verified send of the transaction.")]),t._v(" "),a("p",[t._v("Since each Ethereum transaction has to be funded, there is a growing trend of on-chain transactions that are authenticated via an externally created signature and not by the actual transaction originator. This allows 3rd party funding services or receiver pays without any fundamental changes to the underlying Ethereum architecture. These kinds of transactions have to be signed by an actual key pair and thus can not be used to represent smart contract based Ethereum accounts.")]),t._v(" "),a("p",[t._v("We propose a way of a Smart Contract or regular key pair delegating signing for various purposes to externally managed key pairs. This allows a smart contract to be represented both on-chain as well as off-chain or in payment channels through temporary or permanent delegates.")]),t._v(" "),a("h2",{attrs:{id:"backwards-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[t._v("#")]),t._v(" Backwards Compatibility")]),t._v(" "),a("p",[t._v("All ethereum accounts are valid identities (and DID compatible) using this standard. This means that any wallet provider that uses key pair accounts already supports the bare minimum of this standard, and can implement "),a("code",[t._v("delegate")]),t._v(" and "),a("code",[t._v("attribute")]),t._v(" functionality by simply using the "),a("code",[t._v("ethr-did")]),t._v(" referenced below. As the "),a("strong",[t._v("DID Auth")]),t._v(" standard solidifies it also means that all of these wallets will be compatible with the "),a("a",{attrs:{href:"https://github.com/decentralized-identity",target:"_blank",rel:"noopener noreferrer"}},[t._v("DID decentralized login system"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"implementation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[t._v("#")]),t._v(" Implementation")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/uport-project/ethr-did-registry/blob/develop/contracts/EthereumDIDRegistry.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("ethr-did-registry"),a("OutboundLink")],1),t._v(" ("),a("code",[t._v("EthereumDIDRegistry")]),t._v(" contract implementation)")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/uport-project/ethr-did-resolver",target:"_blank",rel:"noopener noreferrer"}},[t._v("ethr-did-resolver"),a("OutboundLink")],1),t._v(" (DID compatible resolver)")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/uport-project/ethr-did",target:"_blank",rel:"noopener noreferrer"}},[t._v("ethr-did"),a("OutboundLink")],1),t._v(" (javascript library for using the identity)")]),t._v(" "),a("h3",{attrs:{id:"deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deployment"}},[t._v("#")]),t._v(" Deployment")]),t._v(" "),a("p",[t._v("The address for the "),a("code",[t._v("EthereumDIDRegistry")]),t._v(" is "),a("code",[t._v("0xdca7ef03e98e0dc2b855be647c39abe984fcf21b")]),t._v(" on Mainnet, Ropsten, Rinkeby and Kovan.")]),t._v(" "),a("h2",{attrs:{id:"copyright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[t._v("#")]),t._v(" Copyright")]),t._v(" "),a("p",[t._v("Copyright and related rights waived via "),a("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC0"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);