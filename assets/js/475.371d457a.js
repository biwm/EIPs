(window.webpackJsonp=window.webpackJsonp||[]).push([[475],{883:function(e,t,a){"use strict";a.r(t);var r=a(46),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"simple-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[e._v("#")]),e._v(" Simple Summary")]),e._v(" "),a("p",[e._v('The average block times are increasing due to the difficulty bomb (also known as the "'),a("em",[e._v("ice age")]),e._v('") slowly accelerating. This EIP proposes to delay the difficulty bomb for approximately 12 months and to reduce the block rewards with the Constantinople fork, the second part of the Metropolis fork.')]),e._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),a("p",[e._v("Starting with "),a("code",[e._v("CNSTNTNPL_FORK_BLKNUM")]),e._v(" the client will calculate the difficulty based on a fake block number suggesting the client that the difficulty bomb is adjusting around 5 million blocks later than previously specified with the Homestead fork. Furthermore, block rewards will be adjusted to a base of 2 ETH, uncle and nephew rewards will be adjusted accordingly.")]),e._v(" "),a("h2",{attrs:{id:"motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),a("p",[e._v("The Casper development and switch to proof-of-stake is delayed, the Ethash proof-of-work should be feasible for miners and allow sealing new blocks every 15 seconds on average for another 12 months. With the delay of the ice age, there is a desire to not suddenly also increase miner rewards. The difficulty bomb has been known about for a long time and now it's going to stop from happening. In order to maintain stability of the system, a block reward reduction that offsets the ice age delay would leave the system in the same general state as before. Reducing the reward also decreases the likelihood of a miner driven chain split as Ethereum approaches proof-of-stake.")]),e._v(" "),a("h2",{attrs:{id:"specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),a("h4",{attrs:{id:"relax-difficulty-with-fake-block-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relax-difficulty-with-fake-block-number"}},[e._v("#")]),e._v(" Relax Difficulty with Fake Block Number")]),e._v(" "),a("p",[e._v("For the purposes of "),a("code",[e._v("calc_difficulty")]),e._v(", simply replace the use of "),a("code",[e._v("block.number")]),e._v(", as used in the exponential ice age component, with the formula:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("fake_block_number = max(0, block.number - 5_000_000) if block.number >= CNSTNTNPL_FORK_BLKNUM else block.number\n")])])]),a("h4",{attrs:{id:"adjust-block-uncle-and-nephew-rewards"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adjust-block-uncle-and-nephew-rewards"}},[e._v("#")]),e._v(" Adjust Block, Uncle, and Nephew rewards")]),e._v(" "),a("p",[e._v("To ensure a constant Ether issuance, adjust the block reward to "),a("code",[e._v("new_block_reward")]),e._v(", where")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("new_block_reward = 2_000_000_000_000_000_000 if block.number >= CNSTNTNPL_FORK_BLKNUM else block.reward\n")])])]),a("p",[e._v("(2E18 wei, or 2,000,000,000,000,000,000 wei, or 2 ETH).")]),e._v(" "),a("p",[e._v("Analogue, if an uncle is included in a block for "),a("code",[e._v("block.number >= CNSTNTNPL_FORK_BLKNUM")]),e._v(" such that "),a("code",[e._v("block.number - uncle.number = k")]),e._v(", the uncle reward is")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("new_uncle_reward = (8 - k) * new_block_reward / 8\n")])])]),a("p",[e._v("This is the existing pre-Constantinople formula for uncle rewards, simply adjusted with "),a("code",[e._v("new_block_reward")]),e._v(".")]),e._v(" "),a("p",[e._v("The nephew reward for "),a("code",[e._v("block.number >= CNSTNTNPL_FORK_BLKNUM")]),e._v(" is")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("new_nephew_reward = new_block_reward / 32\n")])])]),a("p",[e._v("This is the existing pre-Constantinople formula for nephew rewards, simply adjusted with "),a("code",[e._v("new_block_reward")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"rationale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[e._v("#")]),e._v(" Rationale")]),e._v(" "),a("p",[e._v("This will delay the ice age by 29 million seconds (approximately 12 months), so the chain would be back at 30 second block times in winter 2019. An alternate proposal was to add special rules to the difficulty calculation to effectively "),a("em",[e._v("pause")]),e._v(" the difficulty between different blocks. This would lead to similar results.")]),e._v(" "),a("p",[e._v("This was previously discussed at All Core Devs Meeting "),a("a",{attrs:{href:"https://github.com/ethereum/pm/blob/master/All%20Core%20Devs%20Meetings/Meeting%2042.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("#42"),a("OutboundLink")],1),e._v(" and subsequent meetings; and accepted in the Constantinople Session "),a("a",{attrs:{href:"https://github.com/ethereum/pm/issues/55",target:"_blank",rel:"noopener noreferrer"}},[e._v("#1"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"backwards-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[e._v("#")]),e._v(" Backwards Compatibility")]),e._v(" "),a("p",[e._v("This EIP is not forward compatible and introduces backwards incompatibilities in the difficulty calculation, as well as the block, uncle and nephew reward structure. Therefore, it should be included in a scheduled hardfork at a certain block number. It's suggested to include this EIP in the second Metropolis hard-fork, "),a("em",[e._v("Constantinople")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"test-cases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-cases"}},[e._v("#")]),e._v(" Test Cases")]),e._v(" "),a("p",[e._v("Test cases shall be created once the specification is to be accepted by the developers or implemented by the clients.")]),e._v(" "),a("h2",{attrs:{id:"implementation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" Implementation")]),e._v(" "),a("p",[e._v("The implementation in it's logic does not differ from "),a("RouterLink",{attrs:{to:"/zh/eip-649.html"}},[e._v("EIP-649")]),e._v("; an implementation for Parity-Ethereum is available in "),a("a",{attrs:{href:"https://github.com/paritytech/parity-ethereum/pull/9187",target:"_blank",rel:"noopener noreferrer"}},[e._v("parity-ethereum#9187"),a("OutboundLink")],1),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"copyright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),a("p",[e._v("Copyright and related rights waived via "),a("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CC0"),a("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=s.exports}}]);