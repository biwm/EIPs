(window.webpackJsonp=window.webpackJsonp||[]).push([[390],{795:function(e,t,a){"use strict";a.r(t);var i=a(46),s=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"simple-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[e._v("#")]),e._v(" Simple Summary")]),e._v(" "),a("p",[e._v("A standard way of representing various transactions, especially payment requests in ether and "),a("RouterLink",{attrs:{to:"/eip-20.html"}},[e._v("ERC-20")]),e._v(" tokens as URLs.")],1),e._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),a("p",[e._v("URLs embedded in QR-codes, hyperlinks in web-pages, emails or chat messages provide for robust cross-application signaling between very loosely coupled applications. A standardized URL format for payment requests allows for instant invocation of the user's preferred wallet application (even if it is a webapp or a swarm Ä‘app), with the correct parameterization of the payment transaction only to be confirmed by the (authenticated) user.")]),e._v(" "),a("h2",{attrs:{id:"motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),a("p",[e._v("The convenience of representing payment requests by standard URLs has been a major factor in the wide adoption of Bitcoin. Bringing a similarly convenient mechanism to Ethereum would speed up its acceptance as a payment platform among end-users. In particular, URLs embedded in broadcast Intents are the preferred way of launching applications on the Android operating system and work across practically all applications. Desktop web browsers have a standardized way of defining protocol handlers for URLs with specific protocol specifications. Other desktop applications typically launch the web browser upon encountering a URL. Thus, payment request URLs could be delivered through a very broad, ever growing selection of channels.")]),e._v(" "),a("p",[e._v("This specification supersedes the defunct ERC-67, which is a URL format for representing arbitrary transactions in a low-level fashion. This ERC focuses specifically on the important special case of payment requests, while allowing for other, ABI-specified transactions.")]),e._v(" "),a("h2",{attrs:{id:"specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),a("h3",{attrs:{id:"syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[e._v("#")]),e._v(" Syntax")]),e._v(" "),a("p",[e._v('Payment request URLs contain "ethereum" in their schema (protocol) part and are constructed as follows:')]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v('request                 = schema_prefix target_address [ "@" chain_id ] [ "/" function_name ] [ "?" parameters ]\nschema_prefix           = "ethereum" ":" [ "pay-" ]\ntarget_address          = ethereum_address\nchain_id                = 1*DIGIT\nfunction_name           = STRING\nethereum_address        = ( "0x" 40*HEXDIG ) / ENS_NAME\nparameters              = parameter *( "&" parameter )\nparameter               = key "=" value\nkey                     = "value" / "gas" / "gasLimit" / "gasPrice" / TYPE\nvalue                   = number / ethereum_address / STRING\nnumber                  = [ "-" / "+" ] *DIGIT [ "." 1*DIGIT ] [ ( "e" / "E" ) [ 1*DIGIT ]\n')])])]),a("p",[e._v("Where "),a("code",[e._v("TYPE")]),e._v(" is a standard ABI type name, as defined in "),a("a",{attrs:{href:"https://solidity.readthedocs.io/en/develop/abi-spec.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ethereum Contract ABI specification"),a("OutboundLink")],1),e._v(". "),a("code",[e._v("STRING")]),e._v(" is a URL-encoded unicode string of arbitrary length, where delimiters and the\npercentage symbol ("),a("code",[e._v("%")]),e._v(") are mandatorily hex-encoded with a "),a("code",[e._v("%")]),e._v(" prefix.")]),e._v(" "),a("p",[e._v("Note that a "),a("code",[e._v("number")]),e._v(" can be expressed in "),a("em",[e._v("scientific notation")]),e._v(", with a multiplier of a power of 10. Only integer numbers are allowed, so the exponent MUST be greater or equal to the number of decimals after the point.")]),e._v(" "),a("p",[e._v("If "),a("em",[e._v("key")]),e._v(" in the parameter list is "),a("code",[e._v("value")]),e._v(", "),a("code",[e._v("gasLimit")]),e._v(", "),a("code",[e._v("gasPrice")]),e._v(" or "),a("code",[e._v("gas")]),e._v(" then "),a("em",[e._v("value")]),e._v(" MUST be a "),a("code",[e._v("number")]),e._v(". Otherwise, it must correspond to the "),a("code",[e._v("TYPE")]),e._v(" string used as "),a("em",[e._v("key")]),e._v(".")]),e._v(" "),a("p",[e._v("For the syntax of ENS_NAME, please consult "),a("RouterLink",{attrs:{to:"/eip-137.html"}},[e._v("ERC-137")]),e._v(" defining Ethereum Name Service.")],1),e._v(" "),a("h3",{attrs:{id:"semantics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semantics"}},[e._v("#")]),e._v(" Semantics")]),e._v(" "),a("p",[a("code",[e._v("target_address")]),e._v(" is mandatory and denotes either the beneficiary of native token payment (see below) or the contract address with which the user is asked to interact.")]),e._v(" "),a("p",[a("code",[e._v("chain_id")]),e._v(" is optional and contains the decimal chain ID, such that transactions on various test- and private networks can be requested. If no "),a("code",[e._v("chain_id")]),e._v(" is present, the client's current network setting remains effective.")]),e._v(" "),a("p",[e._v("If "),a("code",[e._v("function_name")]),e._v(" is missing, then the URL is requesting payment in the native token of the blockchain, which is ether in our case. The amount is specified in "),a("code",[e._v("value")]),e._v(" parameter, in the atomic unit (i.e. wei). The use of scientific notation is strongly encouraged. For example, requesting 2.014 ETH to address "),a("code",[e._v("0xfb6916095ca1df60bb79Ce92ce3ea74c37c5d359")]),e._v(" would look as follows:\n"),a("a",{attrs:{href:"ethereum:0xfb6916095ca1df60bb79Ce92ce3ea74c37c5d359?value=2.014e18"}},[e._v("ethereum:0xfb6916095ca1df60bb79Ce92ce3ea74c37c5d359?value=2.014e18")])]),e._v(" "),a("p",[e._v("Requesting payments in "),a("RouterLink",{attrs:{to:"/eip-20.html"}},[e._v("ERC-20")]),e._v(" tokens involves a request to call the "),a("code",[e._v("transfer")]),e._v(" function of the token contract with an "),a("code",[e._v("address")]),e._v(" and a "),a("code",[e._v("uint256")]),e._v(" typed parameter, containing the "),a("em",[e._v("beneficiary address")]),e._v(" and the "),a("em",[e._v("amount in atomic units")]),e._v(", respectively. For example,\nrequesting a Unicorn to address "),a("code",[e._v("0x8e23ee67d1332ad560396262c48ffbb01f93d052")]),e._v(" looks as follows:\n"),a("a",{attrs:{href:"ethereum:0x89205a3a3b2a69de6dbf7f01ed13b2108b2c43e7/transfer?address=0x8e23ee67d1332ad560396262c48ffbb01f93d052&uint256=1"}},[e._v("ethereum:0x89205a3a3b2a69de6dbf7f01ed13b2108b2c43e7/transfer?address=0x8e23ee67d1332ad560396262c48ffbb01f93d052&uint256=1")])],1),e._v(" "),a("p",[e._v("If using ENS names instead of hexadecimal addresses, the resolution is up to the payer, at any time between receiving the URL and sending the transaction. Hexadecimal addresses always take precedence over ENS names, i. e. even if there exists a matching ENS name consisting of "),a("code",[e._v("0x")]),e._v(" followed by 40 hexadecimal digits, it should never be resolved. Instead, the hexadecimal address should be used directly.")]),e._v(" "),a("p",[e._v("Note that the indicated amount is only a suggestion (as are all the supplied arguments) which the user is free to change. With no indicated amount, the user should be prompted to enter the amount to be paid.")]),e._v(" "),a("p",[e._v("Similarly "),a("code",[e._v("gasLimit")]),e._v(" and "),a("code",[e._v("gasPrice")]),e._v(" are suggested user-editable values for "),a("em",[e._v("gas limit")]),e._v(" and "),a("em",[e._v("gas price")]),e._v(", respectively, for the requested transaction. It is acceptable to abbreviate "),a("code",[e._v("gasLimit")]),e._v(" as "),a("code",[e._v("gas")]),e._v(", the two are treated synonymously.")]),e._v(" "),a("h2",{attrs:{id:"rationale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[e._v("#")]),e._v(" Rationale")]),e._v(" "),a("p",[e._v("The proposed format is chosen to resemble "),a("code",[e._v("bitcoin:")]),e._v(" URLs as closely as possible, as both users and application programmers are already familiar with that format. In particular, this motivated the omission of the unit, which is often used in Ethereum ecosystem. Handling different orders of magnitude is facilitated by the exponent so that amount values can be expressed in their nominal units, just like in the case of "),a("code",[e._v("bitcoin:")]),e._v(". The use of scientific notation is strongly encouraged when expressing monetary value in ether or "),a("RouterLink",{attrs:{to:"/eip-20.html"}},[e._v("ERC-20")]),e._v(" tokens. For better human readability, the exponent should be the decimal value of the nominal unit: 18 for ether or the value returned by "),a("code",[e._v("decimals()")]),e._v(" of the token contract for "),a("RouterLink",{attrs:{to:"/eip-20.html"}},[e._v("ERC-20")]),e._v(" tokens. Additional parameters may be added, if popular use cases requiring them emerge in practice.")],1),e._v(" "),a("p",[e._v("The "),a("code",[e._v("0x")]),e._v(" prefix before ethereum addresses specified as hexadecimal numbers is following established practice and also unambiguously distinguishes hexadecimal addresses from ENS names consisting of 40 alphanumeric characters.")]),e._v(" "),a("p",[e._v("Future upgrades that are partially or fully incompatible with this proposal must use a prefix other than "),a("code",[e._v("pay-")]),e._v(" that is separated by a dash ("),a("code",[e._v("-")]),e._v(") character from whatever follows it.")]),e._v(" "),a("h2",{attrs:{id:"backwards-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[e._v("#")]),e._v(" Backwards Compatibility")]),e._v(" "),a("p",[e._v("In the fairly common case of only indicating the recipient address in a request for payment in ether, this specification is compatible with the superseded ERC-67.")]),e._v(" "),a("h2",{attrs:{id:"security-considerations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security-considerations"}},[e._v("#")]),e._v(" Security Considerations")]),e._v(" "),a("p",[e._v("Since irreversible transactions can be initiated with parameters from such URLs, the integrity and authenticity of these URLs are of great importance.\nIn particular, changing either the recipient address or the amount transferred can be a profitable attack. Users should only use URLs received from authenticated sources with adequate integrity protection.")]),e._v(" "),a("p",[e._v("To prevent malicious redirection of payments using ENS, hexadecimal interpretation of Ethereum addresses must have precedence over ENS lookups. Client software may alert the user if an ENS address is visually similar to a hexadecimal address or even outright reject such addresses as likely phishing attacks.")]),e._v(" "),a("p",[e._v("In order to make sure that the amount transacted is the same as the amount intended, the amount communicated to the human user should be easily verifiable by inspection, including the order of magnitude. In case of "),a("RouterLink",{attrs:{to:"/eip-20.html"}},[e._v("ERC-20")]),e._v(" token payments, if the payer client has access to the blockchain or some other trusted source of information about the token contract, the interface should display the amount in the units specified in the token contract. Otherwise, it should be displayed as expressed in the URL, possibly alerting the user to the uncertainty of the nominal unit. To facilitate human inspection of the amount, the use of scientific notation with an exponent corresponding to the nominal unit of the transacted token (e.g. 18 in case of ether) is advisable.")],1),e._v(" "),a("h2",{attrs:{id:"copyright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),a("p",[e._v("Copyright and related rights waived via "),a("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("CC0"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);