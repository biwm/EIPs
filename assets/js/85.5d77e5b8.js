(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{478:function(t,s,n){"use strict";n.r(s);var e=n(46),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"simple-summary"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[t._v("#")]),t._v(" Simple Summary")]),t._v(" "),n("p",[t._v("Propose a standard interface for voting.")]),t._v(" "),n("h2",{attrs:{id:"abstract"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),n("p",[t._v("This proposal creates a standard API for implementing voting within smart contract. This standard provides functionalities to voting as well as to view the vote result and set voting status.")]),t._v(" "),n("h2",{attrs:{id:"motivation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[t._v("#")]),t._v(" Motivation")]),t._v(" "),n("p",[t._v("Voting is one of the earliest example of EVM programming, and also a key to DAO/organizational governance process. We foresee many DAOs will ultimately need to leverage voting as one of the important part of their governance. By creating a voting standard for smart contract / token, we can have the following benefits")]),t._v(" "),n("h3",{attrs:{id:"benefits"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#benefits"}},[t._v("#")]),t._v(" Benefits")]),t._v(" "),n("ol",[n("li",[t._v("Allow general UI and applications to be built on top of a standardized voting to allow more general user to participate, and encourage more DApp and DAO to think about their governance")]),t._v(" "),n("li",[t._v("Allow delegate voting / smart contract voting, automatic voting")]),t._v(" "),n("li",[t._v("Allow voting results to be recorded on-chain, in a standard way, and allow DAOs and DApps to honor the voting result programmatically.")]),t._v(" "),n("li",[t._v("Allow the compatibility with token standard such as "),n("RouterLink",{attrs:{to:"/eip-20.html"}},[t._v("ERC-20")]),t._v(" or other new standards("),n("RouterLink",{attrs:{to:"/eip-777.html"}},[t._v("EIP-777")]),t._v(") and item standard such as "),n("RouterLink",{attrs:{to:"/eip-721.html"}},[t._v("EIP-721")])],1),t._v(" "),n("li",[t._v("Create massive potential for interoperability within Ethereum echo systems and other system.")]),t._v(" "),n("li",[t._v("Allow setting voting deadline, allow determine on single or multiple options. Allow requiring voting orders. (trade-off is interface complexity, we might need "),n("RouterLink",{attrs:{to:"/eip-20.html"}},[t._v("ERC-20")]),t._v(" approach and later a "),n("RouterLink",{attrs:{to:"/eip-777.html"}},[t._v("EIP-777")]),t._v(" for advanced voting)")],1),t._v(" "),n("li",[t._v("Recording the voting with weights with token amount.")]),t._v(" "),n("li",[t._v("Possibly allow trust-worthy privacy-safe voting and anonymous voting (with either voter address being un-associated with the vote they cast, given a list of randomized/obfuscated voting options).\n8")]),t._v(" "),n("li",[t._v("Possibly allow result in reward  by voting partitipation or voting result")])]),t._v(" "),n("h3",{attrs:{id:"use-cases"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[t._v("#")]),t._v(" Use-cases:")]),t._v(" "),n("ol",[n("li",[t._v("Determine on issuing new token, issuing more token or issuing sub-token")]),t._v(" "),n("li",[t._v("Determine on creating new item under "),n("RouterLink",{attrs:{to:"/eip-721.html"}},[t._v("EIP-721")])],1),t._v(" "),n("li",[t._v("Determine on election on certain person or smart contract to be delegated leader for project or subproject")]),t._v(" "),n("li",[t._v("Determine on auditing result ownership allowing migration of smart contract proxy address")])]),t._v(" "),n("h2",{attrs:{id:"specifications"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#specifications"}},[t._v("#")]),t._v(" Specifications")]),t._v(" "),n("div",{staticClass:"language-solidity line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-solidity"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SPDX-License-Identifier: GPL-3.0")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pragma")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("solidity")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),n("span",{pre:!0,attrs:{class:"token version number"}},[t._v("0.7.0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token version number"}},[t._v("0.9.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @title Core interface of ERC1202: A list of *REQUIRED* methods and events for ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///        a contract to be considered conforming to ERC1202. ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @author Zainan Victor Zhou <zzn@zzn.im>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Each ERC1202 contract is a cluster of issues being voted on, or done voted.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///      Any contract of ERC1202 **MUST** implement ALL the following methods and events.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///      Each *issue* is identified with an `issueId`,")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///      For any given `issue`, each available option in that issue is")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///      identified with an `optionId`.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ERC1202Core")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Cast a vote for an issue with `issueId` for option with `optionId`")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _issueId: the issue this vote is casting on.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _optionIds: an *ordered* array of the options being casted for the issue.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///   Whenever referring to the options as a whole, the order MUST be maintained.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return a boolean if TRUE means the vote is casted successfully. ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vote")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _optionIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Query the top ranked options of an issue given issueId and ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///      a limit of max number of top options.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _issueId: the issue being queried for the top options.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _limit: the max number of top options the caller expect to return.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return an ordered list of the top options for given issueId and limit, ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///         where the first in array is the most favorite one, and the last in ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///         array is the least favorite one among the list.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///         Specifically, WHEN limit = 0, returns the default length of winning")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///         options in their ranking in an issue. ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("topOptions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _limit\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev This event is emitted when a vote has been casted.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param issueId the issue the vote is being cased on.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param optionIds an ordered list of the options the vote is casting for.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("event")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnVote")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("indexed")]),t._v(" issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" optionIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("indexed")]),t._v(" voterAddr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @title Metadata interface for ERC1202: A list of *RECOMMENDED* methods and events for ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///        a contract to be considered conforming to ERC1202. ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @author Zainan Victor Zhou <zzn@zzn.im>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ERC1202Metadata")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice A descriptive text for an issue in this contract.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("issueText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice A distinct Uniform Resource Identifier (URI) for a given issue.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Throws if `_issueId` is not a valid issue; ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///      URIs are defined in RFC 3986. ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("issueURI")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" _issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _uri"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice A descriptive text for an option in an issue in this contract.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("optionText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _optionId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @notice A distinct Uniform Resource Identifier (URI) for a given option in a given issue.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Throws if `_issueId` is not a valid option-issue combination; ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///      URIs are defined in RFC 3986. ")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("optionURI")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _optionId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _uri"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @title Status interface for ERC1202: A list of *RECOMMENDED* methods and events for ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///        a contract to be considered conforming to ERC1202. ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @author Zainan Victor Zhou <zzn@zzn.im>")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ERC1202Status")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev This event is emitted when an issue has changed status.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param issueId the issue about which a status change has happened.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param isOpen the status")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("event")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnStatusChange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("indexed")]),t._v(" issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("indexed")]),t._v(" isOpen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Sets the status of a issue, e.g. open for vote or closed for result.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _issueId the issue of Status being set.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _isOpen the status to set.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return _success whether the setStatus option succeeded.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setStatus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" _isOpen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" _success"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Gets the status of a issue, e.g. open for vote or closed for result.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _issueId the issue of Status being get.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return _isOpen the status of the issue.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStatus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" _isOpen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @dev Retrieves the ranked options voted by a given voter for a given issue.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _issueId the issue")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @param _voter the aaddres of voter.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// @return _optionIds the ranked options voted by voter.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("voteOf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" _issueId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" _voter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" _optionIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br"),n("span",{staticClass:"line-number"},[t._v("78")]),n("br"),n("span",{staticClass:"line-number"},[t._v("79")]),n("br"),n("span",{staticClass:"line-number"},[t._v("80")]),n("br"),n("span",{staticClass:"line-number"},[t._v("81")]),n("br"),n("span",{staticClass:"line-number"},[t._v("82")]),n("br"),n("span",{staticClass:"line-number"},[t._v("83")]),n("br"),n("span",{staticClass:"line-number"},[t._v("84")]),n("br"),n("span",{staticClass:"line-number"},[t._v("85")]),n("br"),n("span",{staticClass:"line-number"},[t._v("86")]),n("br"),n("span",{staticClass:"line-number"},[t._v("87")]),n("br"),n("span",{staticClass:"line-number"},[t._v("88")]),n("br"),n("span",{staticClass:"line-number"},[t._v("89")]),n("br"),n("span",{staticClass:"line-number"},[t._v("90")]),n("br"),n("span",{staticClass:"line-number"},[t._v("91")]),n("br"),n("span",{staticClass:"line-number"},[t._v("92")]),n("br"),n("span",{staticClass:"line-number"},[t._v("93")]),n("br"),n("span",{staticClass:"line-number"},[t._v("94")]),n("br"),n("span",{staticClass:"line-number"},[t._v("95")]),n("br"),n("span",{staticClass:"line-number"},[t._v("96")]),n("br"),n("span",{staticClass:"line-number"},[t._v("97")]),n("br")])]),n("h2",{attrs:{id:"rationale"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[t._v("#")]),t._v(" Rationale")]),t._v(" "),n("p",[t._v("We made the following design decisions and here are the rationales.")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("Granularity and Anonymity:")]),t._v(": We created a "),n("code",[t._v("view")]),t._v(" function "),n("code",[t._v("ballotOf")]),t._v(" primarily making it easier for people to check the vote from certain address. This has the following assumptions:")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("It's possible to check someone's vote directly given an address. If implementor don't want to make it so easiy, they can simply reject all calls to this function. We want to make sure that we support both anonymous voting an non-anonymous voting. However since all calls to a smart contract is logged in block history, there is really no secrecy unless done with cryptography tricks. I am not cryptography-savvy enough to comment on the possibility. Please see \"Second Feedback Questions 2018\" for related topic.")])]),t._v(" "),n("li",[n("p",[t._v("It's assumes for each individual address, they can only vote for one decision. They can distribute their available voting power into more granular level. If implementor wants allow this, they ask the user to create another wallet address and grant the new address certain power. For example, a token based voting where voting weight is determined by the amount of token held by a voter, a voter who wants to distribute its voting power in two different option(option set) can transfer some of the tokens to the new account and cast the votes from both accounts.")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("Weight")]),t._v(": We assume there are "),n("code",[t._v("weight")]),t._v(" of votes and can be checked by calling "),n("code",[t._v("weightOf(address addr)")]),t._v(", and the weight distribution is either internally determined or determined by constructor. However we have not been considering updating the weight distribution. Please comment on this design decision as we want to learn how likely an implementor would want to be able to update the voting weight distributions.")])])]),t._v(" "),n("h2",{attrs:{id:"backward-compatibility"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#backward-compatibility"}},[t._v("#")]),t._v(" Backward Compatibility")]),t._v(" "),n("p",[t._v("There is no backward compatibility issue we are aware of.")]),t._v(" "),n("h2",{attrs:{id:"security-considerations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#security-considerations"}},[t._v("#")]),t._v(" Security Considerations")]),t._v(" "),n("p",[t._v("EIP-1202 is a voting standard. We expect the voting standard to be used in connection with other contracts such as token distributions, conducting actions in consensus or on behalf of an entity, multi-signature wallets, etc.")]),t._v(" "),n("p",[t._v("The major security consideration is to ensure only using the standard interface for performing downstream actions or receiving upstream input (vote casting). We expect future audit tool to be based on standard interfaces.")]),t._v(" "),n("p",[t._v("It's also important to note as discussed in this standard that for the sake of simplicity, EIP-1202 is kept in the very basic form. It can be extended to support many different implementation variations. Such variations might contain different assumptions of the behavior and interpretation of actions. One example would be: What does it mean if someone votes multiple times through "),n("code",[t._v("vote")]),t._v("?")]),t._v(" "),n("ul",[n("li",[t._v("Would that mean the voter is increasing their weight, or")]),t._v(" "),n("li",[t._v("vote multiple options in the meanwhile, or")]),t._v(" "),n("li",[t._v("Does the latter vote override the previous vote?")])]),t._v(" "),n("p",[t._v("Because of the flexible nature of voting, we expect many subsequent standards need to be created as an extension of EIP-1202. We suggest any extension or implementations of this standard be thoroughly audited before included in large scale or high asset volume applications.")]),t._v(" "),n("p",[t._v("The third consideration is non-trivialness. Some voting applications assume "),n("em",[n("strong",[t._v("anonymity")])]),t._v(", "),n("em",[n("strong",[t._v("randomness")])]),t._v(", "),n("em",[n("strong",[t._v("time-based deadline")])]),t._v(", "),n("em",[n("strong",[t._v("ordering")])]),t._v(", etc, these requirements in Ethereum are known to be non-trivial to achieve. We suggest any applications or organizations rely on audited and time-proven shared libraries when these requirements need to be enforced in their applications.")]),t._v(" "),n("p",[t._v("The fourth consideration is potential abuse. When voting is standardized and put on contract, it is possible to write another contract that rewards a voter to vote in a certain way. It creates potential issues of bribery and conflict of interest abuse that is previously hard to implement.")]),t._v(" "),n("h2",{attrs:{id:"work-directory"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#work-directory"}},[t._v("#")]),t._v(" Work Directory")]),t._v(" "),n("p",[t._v("The drafting and revision of EIP-1202 is conducted at "),n("a",{attrs:{href:"https://github.com/xinbenlv/eip-1202",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub/xinbenlv/eip-1202"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"copyright"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[t._v("#")]),t._v(" Copyright")]),t._v(" "),n("p",[t._v("Copyright and related rights waived via "),n("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC0"),n("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);s.default=a.exports}}]);