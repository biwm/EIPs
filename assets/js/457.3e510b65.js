(window.webpackJsonp=window.webpackJsonp||[]).push([[457],{866:function(e,t,r){"use strict";r.r(t);var a=r(46),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"simple-summary"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#simple-summary"}},[e._v("#")]),e._v(" Simple Summary")]),e._v(" "),r("p",[e._v("The elliptic curve arithmetic precompiles are currently overpriced. Re-pricing the precompiles would greatly assist a number of privacy solutions and scaling solutions on Ethereum.")]),e._v(" "),r("h2",{attrs:{id:"abstract"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),r("p",[e._v("Changes in 2018 to the underlying library used by the official Go reference implementation led to significant performance gains for the "),r("code",[e._v("ECADD")]),e._v(", "),r("code",[e._v("ECMUL")]),e._v(", and pairing check precompiled contracts on the "),r("code",[e._v("alt_bn128")]),e._v(" elliptic curve.")]),e._v(" "),r("p",[e._v("In the Parity client, field operations used by the precompile algorithms were optimized in 2018, and recent changes to the pairing algorithm used by the "),r("code",[e._v("bn")]),e._v(" crate have brought considerable speedups.")]),e._v(" "),r("p",[e._v("Faster operations on Ethereum clients should be reflected in reduced gas costs.")]),e._v(" "),r("h2",{attrs:{id:"motivation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),r("p",[e._v("Recently, the underlying library used by the "),r("a",{attrs:{href:"https://github.com/ethereum/go-ethereum",target:"_blank",rel:"noopener noreferrer"}},[e._v("official Go reference implementation"),r("OutboundLink")],1),e._v(" to implement the "),r("code",[e._v("ECADD")]),e._v(" (at address "),r("code",[e._v("0x06")]),e._v("), "),r("code",[e._v("ECMUL")]),e._v(" (at address "),r("code",[e._v("0x07")]),e._v("), and pairing check (at address "),r("code",[e._v("0x08")]),e._v(") precompiled contracts was shifted to "),r("a",{attrs:{href:"https://github.com/cloudflare/bn256",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cloudflare's bn256 library"),r("OutboundLink")],1),e._v(". Based on the "),r("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/pull/16203",target:"_blank",rel:"noopener noreferrer"}},[e._v("initial PR that introduced this change"),r("OutboundLink")],1),e._v(", and corroborated in "),r("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/pull/16301#issuecomment-372687543",target:"_blank",rel:"noopener noreferrer"}},[e._v("a later note"),r("OutboundLink")],1),e._v(", the computational cost of "),r("code",[e._v("ECADD")]),e._v(", "),r("code",[e._v("ECMUL")]),e._v(", and pairing checks (excepting the constant) has dropped roughly an order of magnitude across the board.")]),e._v(" "),r("p",[e._v("Also, optimizations in the bn library "),r("a",{attrs:{href:"https://github.com/paritytech/bn/pull/9",target:"_blank",rel:"noopener noreferrer"}},[e._v("in 2018"),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://github.com/paritytech/bn/pull/14",target:"_blank",rel:"noopener noreferrer"}},[e._v("2019"),r("OutboundLink")],1),e._v(" used by the "),r("a",{attrs:{href:"https://github.com/paritytech/parity-ethereum",target:"_blank",rel:"noopener noreferrer"}},[e._v("Parity client"),r("OutboundLink")],1),e._v(" led to a significant performance boost we "),r("a",{attrs:{href:"https://gist.github.com/zac-williamson/838410a3da179d47d31b25b586c15e53",target:"_blank",rel:"noopener noreferrer"}},[e._v("benchmarked"),r("OutboundLink")],1),e._v(" and compared against the "),r("a",{attrs:{href:"https://gist.github.com/pdyraga/4649b74436940a01e8221d85e80bfeef",target:"_blank",rel:"noopener noreferrer"}},[e._v("previous results"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"specification"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[e._v("#")]),e._v(" Specification")]),e._v(" "),r("p",[e._v("Following is a table with the current gas cost and new gas cost:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Contract")]),e._v(" "),r("th",[e._v("Address")]),e._v(" "),r("th",[e._v("Current Gas Cost")]),e._v(" "),r("th",[e._v("Updated Gas Cost")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("ECADD")])]),e._v(" "),r("td",[r("code",[e._v("0x06")])]),e._v(" "),r("td",[e._v("500"),r("sup",[e._v("[1]")])]),e._v(" "),r("td",[e._v("150")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("ECMUL")])]),e._v(" "),r("td",[r("code",[e._v("0x07")])]),e._v(" "),r("td",[e._v("40 000"),r("sup",[e._v("[1]")])]),e._v(" "),r("td",[e._v("6 000")])]),e._v(" "),r("tr",[r("td",[e._v("Pairing check")]),e._v(" "),r("td",[r("code",[e._v("0x08")])]),e._v(" "),r("td",[e._v("80 000 * k + 100 000"),r("sup",[e._v("[2]")])]),e._v(" "),r("td",[e._v("34 000 * k + 45 000")])])])]),e._v(" "),r("p",[e._v("The gas costs for "),r("code",[e._v("ECADD")]),e._v(" and "),r("code",[e._v("ECMUL")]),e._v(" are updates to the costs listed in EIP-196, while the gas costs for the pairing check are updates to the cost listed in EIP-197. Updated gas costs have been adjusted to the less performant client which is Parity, according to benchmarks"),r("sup",[e._v("[3]")]),e._v(".")]),e._v(" "),r("p",[e._v("To come up with these updates gas costs, the performance of the "),r("code",[e._v("ecrecover")]),e._v(" precompile was measured at 116 microseconds per "),r("code",[e._v("ecrecover")]),e._v(" invocation. Assuming the "),r("code",[e._v("ecrecover")]),e._v(" gas price is fair at 3,000 gas, we get a price of 25.86 gas per microsecond of a precompile algorithm's runtime. With this in mind, the pairing precompile took 3,037 microseconds to compute 1 pairing, and 14,663 microseconds to compute 10 pairings. From this, the pairing algorithm has a fixed 'base' run-time of 1,745 microseconds, plus 1,292 microseconds per pairing. We can split the run-time into 'fixed cost' and 'linear cost per pairing' components because of the structure of the algorithm.")]),e._v(" "),r("p",[e._v("Thus using a 'fair' price of 25.86 gas per microsecond, we get a gas formula of ~"),r("code",[e._v("35,000 * k + 45,000")]),e._v(" gas, where "),r("code",[e._v("k")]),e._v(" is the number of pairings being computed. [4]")]),e._v(" "),r("p",[e._v("[1]- Per "),r("RouterLink",{attrs:{to:"/zh/eip-196.html"}},[e._v("EIP-196")]),e._v(".")],1),e._v(" "),r("p",[e._v("[2]- Per "),r("RouterLink",{attrs:{to:"/zh/eip-197.html"}},[e._v("EIP-197")]),e._v(".")],1),e._v(" "),r("p",[e._v("[3]- "),r("a",{attrs:{href:"https://gist.github.com/zac-williamson/838410a3da179d47d31b25b586c15e53",target:"_blank",rel:"noopener noreferrer"}},[e._v("Parity benchmarks."),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("[4]- "),r("a",{attrs:{href:"https://github.com/ethereum/EIPs/pull/1987#discussion_r280977066",target:"_blank",rel:"noopener noreferrer"}},[e._v("PR comment clarifying gas cost math"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"rationale"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[e._v("#")]),e._v(" Rationale")]),e._v(" "),r("h3",{attrs:{id:"existing-protocols-would-benefit-immensely-from-cheaper-elliptic-curve-cryptography"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#existing-protocols-would-benefit-immensely-from-cheaper-elliptic-curve-cryptography"}},[e._v("#")]),e._v(" Existing protocols would benefit immensely from cheaper elliptic curve cryptography")]),e._v(" "),r("p",[e._v("Fast elliptic curve cryptography is a keystone of a growing number of protocols built on top of Ethereum. To list a few:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/AztecProtocol/AZTEC",target:"_blank",rel:"noopener noreferrer"}},[e._v("The AZTEC protocol"),r("OutboundLink")],1),e._v(" utilizes the elliptic curve precompiles to construct private tokens, with zero-knowledge transaction logic, via the "),r("a",{attrs:{href:"https://github.com/ethereum/EIPs/issues/1723",target:"_blank",rel:"noopener noreferrer"}},[e._v("ERC-1723"),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://github.com/ethereum/EIPs/issues/1724",target:"_blank",rel:"noopener noreferrer"}},[e._v("ERC-1724"),r("OutboundLink")],1),e._v(" standard.")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/matter-labs/matter-network",target:"_blank",rel:"noopener noreferrer"}},[e._v("Matter Labs"),r("OutboundLink")],1),e._v(" utilizes the precompiles to implement Ignis, a scaling solution with a throughput of 500txns per second")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/rollup/rollup",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rollup"),r("OutboundLink")],1),e._v(" utilizes the precompiles to create L2 scaling solutions, where the correctness of transactions is guaranteed by main-net, without an additional consensus layer")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://crypto.stanford.edu/~buenz/papers/zether.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("ZEther"),r("OutboundLink")],1),e._v(" uses precompiles "),r("code",[e._v("ECADD")]),e._v(" and "),r("code",[e._v("ECMUL")]),e._v(" to construct confidential transactions")])]),e._v(" "),r("p",[e._v("These are all technologies that have been, or are in the process of being, deployed to main-net. There protocols would all benefit from reducing the gas cost of the precompiles.")]),e._v(" "),r("p",[e._v("To give a concrete example, it currently costs "),r("code",[e._v("820,000")]),e._v(" gas to validate the cryptography in a typical AZTEC confidential transaction. If the gas schedule for the precompiles correctly reflected their load on the Ethereum network, this cost would be "),r("code",[e._v("197,000")]),e._v(" gas. This significantly increases the potential use cases for private assets on Ethereum. AZTEC is planning to deploy several cryptographic protocols Ethereum, but these are at the limits of what is practical given the current precompile costs:")]),e._v(" "),r("ul",[r("li",[e._v("Confidential weighted voting")]),e._v(" "),r("li",[e._v("Partial-order filling over encrypted orders, for private decentralized exchanges")]),e._v(" "),r("li",[e._v("Anonymous identity sharing proofs (e.g. proving you are on a whitelist, without revealing who you are)")]),e._v(" "),r("li",[e._v("Many-to-one payments and one-to-many confidential payments, as encrypted communication channels between main-net and L2 applications")])]),e._v(" "),r("p",[e._v("For zk-SNARK based protocols on Ethereum, EIP-1108 will not only reduce the gas costs of verifying zk-SNARKs substantially, but can also aid in "),r("a",{attrs:{href:"https://github.com/matter-labs/Groth16BatchVerifier",target:"_blank",rel:"noopener noreferrer"}},[e._v("batching together multiple zk-SNARK proofs"),r("OutboundLink")],1),e._v(". This is also a technique that can be used to split up monolithic zk-SNARK circuits into a batch of zk-SNARKs with smaller individual circuit sizes, which makes zk-SNARKs both easier to construct and deploy.")]),e._v(" "),r("p",[e._v("ZEther transactions currently cost ~"),r("code",[e._v("6,000,000")]),e._v(" gas. This EIP would reduce this to ~"),r("code",[e._v("1,000,000")]),e._v(" gas, which makes the protocol more practical.")]),e._v(" "),r("p",[e._v("To summarise, there are several protocols that currently exist on main-net, that would benefit immensely from this EIP. Elliptic curve cryptography can provide valuable solutions for Ethereum, such as scaling and privacy, and the scope and scale of these solutions can be increased if the gas costs for the "),r("code",[e._v("bn128")]),e._v(" precompiles accurately reflects their computational load on the network.")]),e._v(" "),r("h3",{attrs:{id:"cheaper-elliptic-curve-cryptography-can-be-used-to-trade-storage-for-computation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cheaper-elliptic-curve-cryptography-can-be-used-to-trade-storage-for-computation"}},[e._v("#")]),e._v(" Cheaper elliptic curve cryptography can be used to trade storage for computation")]),e._v(" "),r("p",[e._v("Solutions such as Rollup and Ignis can be used to batch groups of individual transactions into a zk-SNARK proof, with the on-chain state being represented by a small Merkle root, instead of multiple account balances.")]),e._v(" "),r("p",[e._v("If zk-SNARK verification costs are decreased, these solutions can be deployed for a wider range of use cases and more Rollup-style transactions can be processed per block.")]),e._v(" "),r("h3",{attrs:{id:"parity-and-geth-already-have-fast-algorithms-that-justify-reduced-gas-costs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#parity-and-geth-already-have-fast-algorithms-that-justify-reduced-gas-costs"}},[e._v("#")]),e._v(" Parity and Geth already have fast algorithms that justify reduced gas costs")]),e._v(" "),r("p",[e._v("This EIP does not require Parity or Geth to deploy new cryptographic libraries, as fast bn128 algorithms have already been integrated into these clients. This goal of proposing this EIP for Istanbul, is to supplement "),r("RouterLink",{attrs:{to:"/zh/eip-1829.html"}},[e._v("EIP-1829")]),e._v(" (arithmetic over generic elliptic curves), providing an immediate solution to the pressing problem of expensive cryptography, while more advanced solutions are developed, defined and deployed.")],1),e._v(" "),r("h2",{attrs:{id:"test-cases"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#test-cases"}},[e._v("#")]),e._v(" Test Cases")]),e._v(" "),r("p",[e._v("As no underlying algorithms are being changed, there are no additional test cases to specify.")]),e._v(" "),r("h2",{attrs:{id:"implementation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" Implementation")]),e._v(" "),r("p",[e._v("Both the Parity and Geth clients have already implemented cryptographic libraries that are fast enough to justify reducing the precompile gas costs. As a reference, here are a list of elliptic curve libraries, in "),r("code",[e._v("C++")]),e._v(", "),r("code",[e._v("golang")]),e._v(" and "),r("code",[e._v("rust")]),e._v(", that support the "),r("code",[e._v("bn128")]),e._v(" curve, and have run-times that are equal to or faster than the Parity benchmarks.")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/paritytech/bn",target:"_blank",rel:"noopener noreferrer"}},[e._v("Parity bn crate (rust)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/tree/master/crypto/bn256/cloudflare",target:"_blank",rel:"noopener noreferrer"}},[e._v("Geth bn256 library (golang)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/herumi/mcl",target:"_blank",rel:"noopener noreferrer"}},[e._v("MCL, a portable C++ pairing library"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/scipr-lab/libff",target:"_blank",rel:"noopener noreferrer"}},[e._v("Libff, a C++ pairing library used in many zk-SNARK libraries"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"additional-references"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#additional-references"}},[e._v("#")]),e._v(" Additional References")]),e._v(" "),r("p",[e._v("@vbuterin independently proposed a similar reduction after this EIP was originally created, with similar rationale, as "),r("a",{attrs:{href:"https://github.com/ethereum/EIPs/issues/1187",target:"_blank",rel:"noopener noreferrer"}},[e._v("ethereum/EIPs#1187"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"copyright"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[e._v("#")]),e._v(" Copyright")]),e._v(" "),r("p",[e._v("Copyright and related rights waived via "),r("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CC0"),r("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=o.exports}}]);