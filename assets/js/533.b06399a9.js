(window.webpackJsonp=window.webpackJsonp||[]).push([[533],{946:function(t,e,a){"use strict";a.r(e);var s=a(46),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),a("p",[t._v("This EIP describes a scheme to charge for data in state, and 'archive' data which is no longer being paid for. It also describes how resurrection of 'archived' data happens.")]),t._v(" "),a("h2",{attrs:{id:"motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[t._v("#")]),t._v(" Motivation")]),t._v(" "),a("p",[t._v("The Ethereum blockchain in its current form is not sustainable because it grows indefinitely. This is true of any blockchain, but Ethereum grows faster than most chains. Many implementation strategies to slow down growth exist. A common strategy is 'state pruning' which discards historical state, keeping only the active copy of contract data and a few recent versions to deal with short-range chain reorganizations. Several implementations also employ compression techniques to keep the active copy of the state as small as possible.")]),t._v(" "),a("p",[t._v("A full node participating in consensus today requires storing large amounts of data even with advanced storage optimizations applied. Future storage requirements are unbounded because any data stored in a contract must be retained forever as dictated by the protocol. This EIP attempts to correct this by adding new consensus rules that put an upper bound on the size of the Ethereum state.")]),t._v(" "),a("p",[t._v("Adding these new rules changes fundamental guarantees of the system and requires a hard fork. Users of Ethereum already pay for the creation and modification of accounts and their storage entries. Under the rules introduced in this EIP, users must also pay to keep accounts accessible. A similar rent scheme was proposed in "),a("a",{attrs:{href:"https://github.com/ethereum/EIPs/issues/35",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP-103"),a("OutboundLink")],1),t._v(" but rejected even back then because the proposal would've upset peoples expectations. As implementers of Ethereum, we still feel that state rent is the right path to long-term sustainability of the Ethereum blockchain and that its undesirable implications can be overcome with off-protocol tooling and careful design.")]),t._v(" "),a("h2",{attrs:{id:"specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#specification"}},[t._v("#")]),t._v(" Specification")]),t._v(" "),a("p",[t._v("The cost of storing an account over time is called "),a("code",[t._v("rent")]),t._v(". The amount of "),a("code",[t._v("rent")]),t._v(" due depends on the size of the account. The "),a("code",[t._v("ether")]),t._v(" that is paid for "),a("code",[t._v("rent")]),t._v(" is destroyed. The "),a("code",[t._v("rent")]),t._v(" is deducted whenever an account is touched.")]),t._v(" "),a("p",[a("code",[t._v("rent")]),t._v(" can be paid from the account's regular "),a("code",[t._v("balance")]),t._v(" or from its 'rent balance'. Accounts can be endowed with "),a("code",[t._v("rent balance")]),t._v(" through a new EVM opcode. When "),a("code",[t._v("rent")]),t._v(" is charged, it is first taken from the "),a("code",[t._v("rent balance")]),t._v(". When "),a("code",[t._v("rent balance")]),t._v(" is zero, it is instead charged from the account's regular "),a("code",[t._v("balance")]),t._v(" instead.")]),t._v(" "),a("p",[t._v("The reason to separate "),a("code",[t._v("balance")]),t._v(" and "),a("code",[t._v("rent balance")]),t._v(" is that certain contracts do not accept "),a("code",[t._v("ether")]),t._v(" sends, or always send the entire balance off to some other destination. For these cases, a separate"),a("code",[t._v("rent balance")]),t._v(" is required.")]),t._v(" "),a("p",[t._v("When an account's "),a("code",[t._v("balance")]),t._v(" is insufficient to pay rent, the account becomes "),a("code",[t._v("inactive")]),t._v(". Its storage and contract code are removed. Inactive accounts cannot be interacted with, i.e. it behaves as if it has no contract code.")]),t._v(" "),a("p",[t._v("Inactive accounts can be restored by re-uploading their storage. To restore an inactive account "),a("code",[t._v("A")]),t._v(", a new account "),a("code",[t._v("B")]),t._v(" is created with arbitrary code and its storage modified with "),a("code",[t._v("SSTORE")]),t._v(" operations until it matches the storage root of "),a("code",[t._v("A")]),t._v(". Account "),a("code",[t._v("B")]),t._v(" can restore "),a("code",[t._v("A")]),t._v(" through the "),a("code",[t._v("RESTORETO")]),t._v(" opcode. This means the cost of restoring an account is equivalent to recreating it via successive "),a("code",[t._v("SSTORE")]),t._v(" operations.")]),t._v(" "),a("h3",{attrs:{id:"changes-to-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changes-to-state"}},[t._v("#")]),t._v(" Changes To State")]),t._v(" "),a("p",[t._v("At the top level, a new key "),a("code",[t._v("size")]),t._v(" is added to the accounts trie. This key tracks the total number of trie nodes across all accounts, including storage trie nodes. To track rent, the structure of account entries is changed as well.")]),t._v(" "),a("p",[t._v("Before processing the block in which this EIP becomes active, clients iterate the whole state once to count the number of trie nodes and to change the representation of all accounts to the new format.")]),t._v(" "),a("h4",{attrs:{id:"account-representation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#account-representation"}},[t._v("#")]),t._v(" Account Representation")]),t._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("account = [nonce, balance, storageroot, codehash, rentbalance, rentblock, storagesize]\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("Each account gets three additional properties: "),a("code",[t._v("rentbalance")]),t._v(", "),a("code",[t._v("rentblock")]),t._v(" and "),a("code",[t._v("storagesize")]),t._v(".")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("rentbalace")]),t._v(" field tracks the amount of "),a("code",[t._v("rent balance")]),t._v(" available to the account. Upon self-destruction any remaining "),a("code",[t._v("rent balance")]),t._v(" is transferred to the beneficiary. Any modification of the account recomputes its current "),a("code",[t._v("rent balance")]),t._v(".")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("rentblock")]),t._v(" field tracks the block number in which the "),a("code",[t._v("rent balance")]),t._v(" was last recomputed. Upon creation, this field is initialized with the current block number. "),a("code",[t._v("rentblock")]),t._v(" is also updated with the current block number whenever the account is modified.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("storagesize")]),t._v(" field tracks the amount of storage related to the account. It is a number containing the number of storage slots currently set. The "),a("code",[t._v("storagesize")]),t._v(" of an inactive account is zero.")]),t._v(" "),a("h3",{attrs:{id:"charging-rent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#charging-rent"}},[t._v("#")]),t._v(" Charging Rent")]),t._v(" "),a("p",[t._v("There is a new protocol constant "),a("code",[t._v("MAX_STORAGE_SIZE")]),t._v(" that specifies the upper bound on the number of state tree nodes:")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("MAX_STORAGE_SIZE "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~160GB of state")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("A 'storage fee factor' for each block is derived from this constant such that fees increase as the limit is approached.")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("storagefee_factor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    ramp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MAX_STORAGE_SIZE "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MAX_STORAGE_SIZE "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" total_storage_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ramp\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("When a block is processed, "),a("code",[t._v("rent")]),t._v(" is deducted from all accounts modified by transactions in the block after the transactions have been processed. The amount due for each account is based on the account's storage size.")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prestate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentblock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    fee "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prestate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rentblock"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentblock"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        fee "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" storagefee_factor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" prestate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storagesize\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fee "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" storagefee_factor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentblock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storagesize\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charge_rent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prestate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentblock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    fee "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prestate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentblock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" fee "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rentbalance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rentbalance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" fee\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        fee "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rentbalance\n        poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rentbalance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("balance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("balance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    poststate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rentblock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currentblock\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h3",{attrs:{id:"new-evm-opcodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-evm-opcodes"}},[t._v("#")]),t._v(" New EVM Opcodes")]),t._v(" "),a("h4",{attrs:{id:"payrent-amount-addr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#payrent-amount-addr"}},[t._v("#")]),t._v(" "),a("code",[t._v("PAYRENT <amount> <addr>")])]),t._v(" "),a("p",[t._v("At any time, the "),a("code",[t._v("rent balance")]),t._v(" of an account may be topped up by the "),a("code",[t._v("PAYRENT")]),t._v(" opcode. "),a("code",[t._v("PAYRENT")]),t._v(" deducts the given amount of "),a("code",[t._v("ether")]),t._v(" from the account executing the opcode and adds it to the "),a("code",[t._v("rent balance")]),t._v(" of the address specified as beneficiary.")]),t._v(" "),a("p",[t._v("Any participant can pay the rent for any other participant.")]),t._v(" "),a("p",[t._v("Gas cost: TBD")]),t._v(" "),a("h4",{attrs:{id:"rentbalance-addr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rentbalance-addr"}},[t._v("#")]),t._v(" "),a("code",[t._v("RENTBALANCE <addr>")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("rent balance")]),t._v(" of an account may be queried through the "),a("code",[t._v("RENTBALANCE")]),t._v(" opcode. It pushes the "),a("code",[t._v("rentbalance")]),t._v(" field of the given address to the stack.")]),t._v(" "),a("p",[t._v("Gas cost: like "),a("code",[t._v("EXTCODEHASH")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"ssize-addr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssize-addr"}},[t._v("#")]),t._v(" "),a("code",[t._v("SSIZE <addr>")])]),t._v(" "),a("p",[t._v("This opcode pushes the "),a("code",[t._v("storagesize")]),t._v(" field of the given account to the stack.")]),t._v(" "),a("p",[t._v("Gas cost: like "),a("code",[t._v("EXTCODEHASH")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"restoreto-addr-codeaddr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restoreto-addr-codeaddr"}},[t._v("#")]),t._v(" "),a("code",[t._v("RESTORETO <addr> <codeaddr>")])]),t._v(" "),a("p",[t._v("This opcode restores the inactive account at the given address. This is a bit like "),a("code",[t._v("SELFDESTRUCT")]),t._v(" but has more specific semantics.")]),t._v(" "),a("p",[t._v("The account at "),a("code",[t._v("addr")]),t._v(" must be "),a("code",[t._v("inactive")]),t._v(" (i.e. have "),a("code",[t._v("storagesize")]),t._v(" zero) and its "),a("code",[t._v("storageroot")]),t._v(" must match the "),a("code",[t._v("storageroot")]),t._v(" of the contract executing "),a("code",[t._v("RESTORETO")]),t._v(". The "),a("code",[t._v("codeaddr")]),t._v(" specifies the address of a contract from which code is taken. The code of the "),a("code",[t._v("codeaddr")]),t._v(" account must match the "),a("code",[t._v("codehash")]),t._v(" of "),a("code",[t._v("addr")]),t._v(".")]),t._v(" "),a("p",[t._v("If all these preconditions are met, "),a("code",[t._v("RESTORETO")]),t._v(" transfers the storage of the account executing the opcode to "),a("code",[t._v("addr")]),t._v(" and resets its "),a("code",[t._v("storagesize")]),t._v(" to the full size of the storage. The code of "),a("code",[t._v("addr")]),t._v(" is restored as well. "),a("code",[t._v("RESTORETO")]),t._v(" also transfers any remaining balance and rent balance to "),a("code",[t._v("addr")]),t._v(". The contract executing "),a("code",[t._v("RESTORETO")]),t._v(" is deleted.")]),t._v(" "),a("p",[t._v("Gas cost: TBD")]),t._v(" "),a("h2",{attrs:{id:"rationale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rationale"}},[t._v("#")]),t._v(" Rationale")]),t._v(" "),a("h3",{attrs:{id:"why-do-we-need-a-separate-rent-balance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-do-we-need-a-separate-rent-balance"}},[t._v("#")]),t._v(" Why do we need a separate rent balance?")]),t._v(" "),a("p",[t._v("Accounts need a separate rent balance because some contracts are non-payable, i.e. they reject regular value transfers. Such contracts might not be able to keep themselves alive, but users of those contracts can keep them alive by paying rent for them.")]),t._v(" "),a("p",[t._v("Having the additional balance also makes things easier for contracts that hold balance on behalf of a user. Consider the canonical crowdfunding example, a contract which changes behavior once a certain balance is reached and which tracks individual user's balances. Deducting rent from the main balance of the contract would mess up the contract's accounting, leaving it unable to pay back users accurately if the threshold balance isn't reached.")]),t._v(" "),a("h3",{attrs:{id:"why-restoration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-restoration"}},[t._v("#")]),t._v(" Why restoration?")]),t._v(" "),a("p",[t._v("One of the fundamental guarantees provided by Ethereum is that changes to contract storage can only be made by the contract itself and storage will persist forever. If you hold a token balance in a contract, you'll have those tokens forever. By adding restoration, we can maintain this guarantee to a certain extent.")]),t._v(" "),a("h3",{attrs:{id:"implementation-impact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implementation-impact"}},[t._v("#")]),t._v(" Implementation Impact")]),t._v(" "),a("p",[t._v("The proposed changes tries to fit within the existing state transition model. Note that there is no mechanism for deactivating accounts the moment they can't pay rent. Users must touch accounts to ensure their storage is removed because we'd need to track all accounts and their rent requirements in an auxlilary data structure otherwise.")]),t._v(" "),a("h2",{attrs:{id:"backwards-compatibility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backwards-compatibility"}},[t._v("#")]),t._v(" Backwards Compatibility")]),t._v(" "),a("p",[t._v("TBA")]),t._v(" "),a("h2",{attrs:{id:"test-cases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-cases"}},[t._v("#")]),t._v(" Test Cases")]),t._v(" "),a("p",[t._v("TBA")]),t._v(" "),a("h2",{attrs:{id:"implementation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[t._v("#")]),t._v(" Implementation")]),t._v(" "),a("p",[t._v("TBA")]),t._v(" "),a("h2",{attrs:{id:"copyright"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copyright"}},[t._v("#")]),t._v(" Copyright")]),t._v(" "),a("p",[t._v("Copyright and related rights waived via "),a("a",{attrs:{href:"https://creativecommons.org/publicdomain/zero/1.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC0"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);